- en: 8. Technical Cybersecurity
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we cover what was referred to earlier as technical controls,
    using a six-step approach:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: What is an attack surface?
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The lifecycle of a standard cybersecurity attack.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Basic methods of technical defense.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Evolving methods of attack (vectors).
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More advanced methods of defense.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other methods of cyber attack and defense.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As we have progressed through the book, a lot of technical terms have slowly
    been introduced.  In this chapter, the first time we use a technical term that
    has already been defined earlier in the book it will be highlighted in bold and
    italic text.  You can then refer to the dictionary at the back of the book if
    you need to refresh your understanding of the meaning.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: If we introduce a new technical term for the first time, we will define it directly
    under the paragraph where it is first used.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: Many cybersecurity courses and certifications focus almost entirely on technical
    controls.  That is a valid approach if you only need to acquire a limited, additional
    set of technical skills.  For example, an existing information security professional
    would already be familiar with many of the security controls that were covered
    earlier in this book.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: It is important to remember that even the best technical controls can still
    be completely circumvented by non-technical means.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: Technical controls are critical to cybersecurity, but so are other non-technical
    layers of defense.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: Defense in depth cannot be achieved without using all the security control methods,
    including technical, physical, procedural and others.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: 'Remember: An effective defense requires a comprehensive approach.  A successful
    attack can happen through a single vulnerability.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: What is an Attack Surface?
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: For a cyber attack to be successful, the first thing the attacker needs to achieve
    is a point of entry.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: When defending a digital landscape, we need to understand which area(s) the
    attackers could target.  This target area is referred to as the attack surface.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: '| attack surface* – the sum of the different points where an unauthorized user
    (the "attacker") can try to enter data into or extract data from an environment.
    |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
- en: 'Back in chapter six we looked at cyber defense points and identified six major
    categories:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '| i) | Data – any information in electronic or digital format. |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
- en: '| ii) | Devices – any hardware used to create, modify, process, store or transmit
    data.  Computers, smartphones and USB drives are all examples of devices. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
- en: '| iii) | Applications – any programs (software) that reside on any device. 
    Usually programs exist to create, modify, process, store, inspect or transmit
    specific types of data. |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
- en: '| iv) | Systems – groups of applications that operate together to serve a more
    complex purpose. |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
- en: '| v) | Networks – the group name for a collection of devices, wiring and applications
    used to connect, carry, broadcast, monitor or safeguard data.  Networks can be
    physical (use material assets such as wiring) or virtual (use applications to
    create associations and connections between devices or applications.) |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
- en: '| vi) | Other communication channels – used to send, store or receive electronic
    information. |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
- en: If any item from the list above carries or handles information for an enterprise,
    it will be part of the potential attack surface.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: Even if an application exists within a supplier’s digital systems, if it contains
    the enterprise’s data or provides critical services, any consequences of a successful
    cyber attack will usually still be the organization’s legal responsibility.  This
    means that it is critical to remember to include these external parts when considering
    the attack surface.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: The enterprise may not be responsible for operating these external systems day
    to day, but it is still responsible for ensuring the correct security is in place
    and is also accountable if the security fails to protect its own services or information.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: Part of the role of the security architect is to try to reduce the size of the
    attack surface while also sustaining ongoing business needs.  Any time the size
    and complexity of the attack surface can be reduced, it becomes easier to defend.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: Another method of reducing the security risk is to subdivide the attack surface.
    This can be achieved using network segmentation, which gives the system greater
    resilience.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: '| network segmentation – splitting a single collection of devices, wiring and
    applications that connect, carry, broadcast, monitor or safeguard data into smaller
    sections.  This allows for more discrete management of each section, allowing
    greater security to be applied in sections with the highest value, and also permitting
    smaller sections to be impacted in the event of a malware infection or other disruptive
    event. |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
- en: If one segment is attacked or otherwise compromised, it can be isolated with
    less overall impact to the full digital landscape used by the organization.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: In addition, it is possible to create different security zones.  Higher levels
    of security can then be applied to attack surfaces (including network segments)
    in which higher-value data is stored or transacted.  Lower (and less costly) levels
    of security can be used where the information stored or transacted is itself of
    low value.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: Care must be taken when evaluating where lower levels of security can be permitted. 
    This is because there are frequent examples of attack exploits that have used
    low security areas of an attack surface as an access route to higher security
    areas.  Remember Edward Snowden?  He simply found a document that had been incorrectly
    classified at a lower security level to provide a map that allowed him to take
    information from much more tightly secured parts of the digital landscape.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: The Lifecycle of a Cybersecurity Attack
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: 'Most cyber attacks involve malware.  If malware is involved, there are usually
    seven basic stages to the attack process.  These are:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: (i) Reconnaissance
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: (ii) Tooling / preparation
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: (iii) Infection
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: (iv) Persistence
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: (v) Communication
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: (vi) Control
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: (vii) Realizing the value
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: This lifecycle is usually described as an advanced persistent threat, also known
    as an APT.  APTs are defined earlier in the book, and a fuller definition can
    also be found in the terminology section.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: We will now look at each stage of the lifecycle in more detail.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: Reconnaissance
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: To make an attack as cost-efficient for the criminals as possible, nothing beats
    research.  The Internet is a vast repository of information for cyber attackers.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: There are tools (Harvester is one) that allow people to simply type in the website
    name of a potential target and the program reveals all the names, email addresses,
    job titles and other information that the organization’s staff have placed on
    public sites such as LinkedIn, Facebook and others.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: You may also recall that the Target (retailer) hack is alleged to have used
    a publicly available diagram detailing how its point of sales system was configured.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: For a more targeted attack, especially by nation states, hanging out at a local
    bar or networking at conferences can also be a great way of acquiring intelligence
    about the easiest routes to compromise an environment, especially if the reconnaissance
    specialists can find the disgruntled employees or consultants.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: Tooling / preparation
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: Equipped with an understanding of potential routes into an environment and systems
    to target, the hacker can now put together the right tools for the job.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: Hacking no longer requires extensive technical knowledge.  Malware can now be
    assembled as easily as a Word document can be prepared.  Readily available software
    allows custom malware to be put together by just clicking the desired capabilities,
    and then the hacker can add his or her own unique encryption.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: More advanced malware creation tools will even let hackers define how they want
    their attack tools to change their appearance – and how often – to help them avoid
    detection.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: Infection
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: During the infection stage, the attacker seeks to use any method possible to
    place malware into any part of the target attack surface.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '| infection – (in the context of cybersecurity) unwanted invasion by an outside
    agent that an attacker uses to create damage or disruption. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
- en: Persistence
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: Once in place, the malware will try to persist by using as many opportunities
    as it can to bypass or disable defenses, copy itself into locations where it can
    re-install whenever an asset is reset or restored, and disguise itself as an inconspicuous
    file.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: Seeking to remain in place within the attack surface is referred to as persistence. 
    A frequent target for helping malware persist is to install it into the master
    boot record.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '| persistence – to seek continued existence despite opposition.master boot
    record – the first sector on any electronic device that defines which operating
    system should be loaded when it is initialized or re-started. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
- en: Installing on the master boot record allows the malware to re-install itself
    when a device is re-started.  This offers the potential to disable or bypass other
    security measures that may be commenced during the start-up (or ‘boot’) sequence.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: Often the malware will use an exploit known as a buffer overflow (intentionally
    writing more data to the memory than is possible) to achieve command-level access
    known as shell access.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '| exploit – to take advantage of a security vulnerability.buffer overflow –
    exceeding the region of electronic memory used to temporarily store data when
    it is being moved between locations.  This process is used by some forms of malware
    to exploit an electronic target.shell access – command-level permission to perform
    executive control over an electronic device. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
- en: Communication
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: 'To be effective, malware usually needs the ability to communicate.  Communication
    (inbound and outbound) can allow malware to do one or more of the following:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: Find other malware with which to cooperate.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exfiltrate stolen information.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Take instruction from the attack controller (for example – from a bot herder).
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| bot herder – is a hacker who uses automated techniques to seek vulnerable
    networks and systems.  The bot herder’s initial goal is to install or find bot
    programs that can be used to achieve a particular purpose.  Once one or more bots
    are in place, the hacker can control these programs to perform a larger objective
    of stealing, corrupting and/or disrupting information, assets and services.  See
    also botnet.bot – is a computer program designed to perform specific tasks.  They
    are usually simple, small and designed to perform fast, repetitive tasks.  When
    the purpose of the program conflicts with an organization’s goals and needs, a
    bot can be considered to be a form of malware.  See also botnet. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
- en: If malware can communicate, it can often be remotely adapted to change or add
    functions and can even receive updates (new programming) that allow it to continue
    to avoid damage or to take even greater advantage of the infiltration point it
    has penetrated.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: Each piece of malware often has multiple communication options.  If one communication
    method is ineffective, it can switch to another.  It can also receive updates
    about new communication paths, or, if it can find other familiar malware, it can
    potentially use that for its own communication purposes.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: Attackers usually seek to install or leverage large numbers of bots, which results
    in a robotic network referred to as a botnet.  This provides greater resiliency
    to the attack, plus offers a greater number of potential communication channels.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: Control
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: Once malware is in place and is persisting and communicating, the attacker can
    then coordinate, update and direct what the malware does.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: If defensive measures can prevent malware from communicating with the controller,
    it often becomes harmless, since losing the ability to receive instructions or
    to send out stolen information usually renders it ineffective.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: Some forms of cyber defense use decapitation as one method of stopping malware
    after it has been discovered.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: '| Decapitation* – (in the context of malware) preventing any compromised device
    from being able to communicate, receive instruction, send information or spread
    malware to other devices.  This can effectively render many forms of malware ineffective
    because it removes any command, control or theft benefit.  This is often a stage
    during threat removal. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
- en: Realizing the value
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: No cyber attack is worthwhile unless the perpetrator derives some value from
    it.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: That value may simply be to disrupt operations, steal and resell information
    or demand a ransom.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: An attack only becomes truly worthwhile to an attacker when he or she gets the
    payoff.  If he or she performs a ransomware attack but fails to collect a ransom
    payment, it may cost the target organization a lot of time and money, but it will
    still result in a net loss for the criminals.  For that reason, regardless of
    the interruption in communications or other services that results, it is  never
    advisable for any organization or individual to ever pay in response to any ransomware
    demand.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: '| ransomware – a form of malicious software (malware) that prevents or restricts
    usage of one or more digital devices or applications or renders a collection of
    electronic data unreadable until a sum of money is paid. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
- en: Basic Methods of Technical Defense
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: For each part of the attack surface (also known as the cyber defense points),
    there are a range of options that can be used to prevent or detect a cyber attack.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: It takes considerably more effort to manage a cyber attack once an infection
    has successfully settled in.  Indeed, once an attacker has gained unauthorized
    access, the malware can often persist for months or even years.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: It is more effective to prevent infection or intrusion than it is to take corrective
    measures afterwards.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: In the early days of technical protection, most attacks were launched through
    email.  This is no longer the case.  Attackers now use any vector (method of attack)
    they can.  The evolving techniques are covered in the next part of this chapter.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: 'Attacks can occur anywhere on an attack surface, so it is important to consider
    the primary methods of defense and where they can be deployed. Remember, the key
    components of an attack surface are:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: Data
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Networks
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Devices
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Applications
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Systems
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other communication channels
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We should also define the difference between host-based and network-based defenses.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: '| host-based – describes a situation in which something is installed immediately
    on the device it is protecting, servicing or subverting.network-based – describes
    a situation in which something is installed to protect, serve or subvert the community
    of devices, wiring and applications used to connect, carry, broadcast, monitor
    or safeguard information (the network). |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| 基于主机 - 描述安装在要保护、服务或颠覆的设备上的情况。基于网络 - 描述安装在用于连接、传输、广播、监视或保护信息的设备、布线和应用程序社区上的情况。
    |'
- en: Many years ago, it was considered sufficient to primarily rely on network-based
    security measures.  This is no longer adequate.  Enterprises now run security
    everywhere they can.  This means every part of the attack surface should include
    an adequate and appropriate selection of security defenses.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 许多年前，主要依赖基于网络的安全措施被认为是足够的。这已经不再足够了。企业现在在所有可能的地方都运行安全性。这意味着攻击面的每一部分都应包含足够和适当选择的安全防御。
- en: 'Network security is no longer a reliable security defense layer for many reasons,
    including:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 几个原因导致网络安全不再是可靠的安全防御层，包括：
- en: Many activities take place away from networks (mobile and cloud applications
    for example).
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多活动发生在网络之外（例如移动和云应用程序）。
- en: A network can fail to detect malware that runs through it when the malware is
    encrypted or is disguised as legitimate traffic.
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当恶意软件被加密或伪装成合法流量时，网络可能无法检测到其运行。
- en: Networks can no longer rely on ‘trust’ between devices they contain, as the
    devices themselves are no longer capable of easily identifying and defeating attacks.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络不能再依赖于其中包含的设备之间的“信任”，因为这些设备本身不再能够轻松识别和击败攻击。
- en: Many small businesses are now moving away from even setting up computer networks. 
    Instead, they seek to secure each item (applications, devices, services) and to
    run adequate back-up and recovery processes.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 现在许多小型企业甚至不再设置计算机网络。相反，他们试图保护每个项目（应用程序、设备、服务）并运行足够的备份和恢复流程。
- en: There are now literally hundreds of different types of security defense technologies
    available.  As threats emerge, so do new technologies to help address them.  These
    technologies, when effective, are then gradually merged into simpler, more unified
    and easier-to-deploy software and hardware.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 现在有成百上千种不同类型的安全防御技术可供选择。随着威胁的出现，为了帮助应对这些威胁，新技术也随之出现。当这些技术有效时，它们逐渐融入更简单、更统一和更容易部署的软件和硬件中。
- en: Because of the large number of technologies, in this section, we will only focus
    on some of the most established and leading forms.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 由于技术种类繁多，在本节中，我们将只关注一些最成熟和领先的形式。
- en: 'The primary technical methods of defense can be considered to be:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 主要的技术防御方法可以被认为是：
- en: Anti-malware / advanced endpoint protection solutions
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 反恶意软件/高级端点保护解决方案
- en: Firewalls
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 防火墙
- en: Intrusion Prevention & Intrusion Detection
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 入侵防御与入侵检测
- en: Data Loss Prevention
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据丢失预防
- en: Encryption / cryptography (although this is also used for attack)
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密/密码学（尽管这也被用于攻击）
- en: Proxy servers (again, also used for both attack and defense)
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代理服务器（同样也用于攻击和防御）
- en: Identity and Access Controls
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 身份和访问控制
- en: Containerization and virtualization
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 容器化和虚拟化
- en: Penetration testing
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 渗透测试
- en: Vulnerability assessment
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 漏洞评估
- en: We will now provide a basic definition for each of these primary, technical
    security controls.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将为每个主要的技术安全控制提供基本定义。
- en: '| endpoint – any electronic device that can be used to store or process information. 
    Laptops, smartphones and even smart watches are all examples of an endpoint. |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| 端点 - 任何可以用来存储或处理信息的电子设备。笔记本电脑、智能手机甚至智能手表都是端点的例子。 |'
- en: Anti-malware
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 反恶意软件
- en: '| anti-malware – is a computer program designed to look for specific files
    and behaviors (signatures) that indicate the presence or the attempted installation
    of malicious software.  If or when detected, the program seeks to isolate the
    attack (quarantine or block the malware), remove it, if it can, and also alert
    appropriate people to the attempt or to the presence of the malware.  The program
    can be host-based (installed on devices that are directly used by people) or network-based
    (installed on gateway devices through which information is passed).  Older forms
    of this software could detect only specific, pre-defined forms of malicious software
    using signature files.  Newer forms use machine learning and make use of additional
    techniques including behavior monitoring.signatures – (in the context of cybersecurity)
    are the unique attributes – for example, file size, file extension, data usage
    patterns and method of operation – that identify a specific computer program. 
    Traditional anti-malware and other security technologies can make use of this
    information to identify and manage some forms of rogue software or communications.
    |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| 反恶意软件 - 是一个设计用来查找特定文件和行为（签名）的计算机程序，表明存在或尝试安装恶意软件。一旦检测到，程序就试图隔离攻击（隔离或阻止恶意软件），如果可以的话，将其删除，并向适当的人员警告尝试或存在恶意软件。该程序可以是基于主机的（安装在由人直接使用的设备上）或基于网络的（安装在通过其中传递信息的网关设备上）。这种软件的旧形式只能使用签名文件检测特定的、预定义的恶意软件形式。新形式使用机器学习，并利用额外的技术，包括行为监控。签名
    -（在网络安全上下文中）是唯一的属性 - 例如，文件大小、文件扩展名、数据使用模式和操作方法 - 用于识别特定的计算机程序。传统的反恶意软件和其他安全技术可以利用这些信息来识别和管理某些形式的恶意软件或通信。
    |'
- en: Further definitions for bolded terms in this section can be found in the Cybersecurity
    to English section of this book.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，粗体字词的进一步定义可以在本书的“网络安全英语”部分找到。
- en: Anti-malware is a primary method of defense.  To be effective, it is usually
    installed on as many different parts of the attack surface as possible.  This
    will usually include user devices (computers, smartphones, tablets, ...) and network
    hardware.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 反恶意软件是主要的防御方法。为了有效，通常会安装在尽可能多的攻击面上。这通常包括用户设备（计算机、智能手机、平板电脑等）和网络硬件。
- en: The anti-malware market is undergoing an evolution.  It used to be difficult
    to create malware.  When that was true, anti-malware relied on teams of people
    to analyze anything new and write specific identification and isolation routines
    that would block and quarantine harmful programs.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 反恶意软件市场正在发生变化。以前创建恶意软件是困难的。在那时，反恶意软件依赖于团队分析任何新东西，并编写特定的识别和隔离例程，以阻止和隔离有害程序。
- en: That process is no longer effective.  A new generation of anti-malware now relies
    on the ability to recognize suspected malware using a basic form of artificial
    intelligence.  A file no longer has to even be run before it can be isolated or
    removed.  This ‘nextgen’ (next generation) anti-malware can block over 99% of
    malware, even if the suspect program has never before been encountered.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 那个过程已经不再有效了。一代新的反恶意软件现在依赖于识别可疑恶意软件的能力，使用一种基本形式的人工智能。甚至在运行之前，文件都不必运行就可以被隔离或移除。这种“下一代”反恶意软件可以阻止超过99%的恶意软件，即使可疑程序以前从未遇到过。
- en: Unfortunately, many established customers still use older forms of anti-malware
    that are largely ineffective.  So if you are an individual or work for a company
    with older anti-malware in place, it is a good idea to check on how well it runs
    and how effective it claims to be against new, modified and previously unknown
    malware.  Organizations with nextgen anti-malware have substantially fewer problems
    to clean up.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，许多老客户仍在使用基本上无效的旧式反恶意软件。所以，如果你是个人或为一家安装了较旧的反恶意软件的公司工作，检查它运行得有多好以及它对新的、修改过的和以前未知的恶意软件声称的有效性是个好主意。使用下一代反恶意软件的组织要解决的问题大大减少。
- en: More advanced applications and systems may also have their own, additional anti-malware
    that operates during certain functions; for example, it may scan uploaded files
    for threats before allowing the user to store, read or otherwise use the files. 
    This is particularly important because applications and systems may use forms
    of encryption that can bypass other security defenses by masquerading as application
    data.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 更先进的应用程序和系统可能还有自己的额外反恶意软件，它在某些功能期间运行；例如，它可能会在允许用户存储、读取或以其他方式使用文件之前扫描上传的文件以查找威胁。
    这特别重要，因为应用程序和系统可能使用可以伪装为应用程序数据的加密形式，从而绕过其他安全防御。
- en: Anti-malware needs to be regularly updated with the latest updates that contain
    information about new and evolved threats.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 反恶意软件需要定期更新最新的更新，其中包含有关新的和进化的威胁的信息。
- en: Firewalls
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 防火墙
- en: '| firewall – is hardware (physical device) or software (computer program) used
    to monitor and protect inbound and outbound data (electronic information).  It
    achieves this by applying a set of rules.  These physical devices or computer
    programs are usually deployed, at a minimum, at the perimeter of each network
    access point.  Software firewalls can also be deployed on devices to add further
    security.  The rules applied within a firewall are known as the firewall policy. 
    Advanced firewalls are often equipped with other defensive features typical of
    more unified threat management. |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| 防火墙 - 是用于监视和保护入站和出站数据（电子信息）的硬件（物理设备）或软件（计算机程序）。 它通过应用一组规则来实现这一点。 这些物理设备或计算机程序通常至少部署在每个网络访问点的周边。
    软件防火墙也可以部署在设备上以增加额外的安全性。 防火墙中应用的规则称为防火墙策略。 高级防火墙通常配备了更统一的威胁管理的其他防御功能。 |'
- en: Firewalls act as gatekeepers at the borders of each network and on devices as
    well.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 防火墙在每个网络的边界和设备上充当着门卫的角色。
- en: Early firewalls relied mainly on understanding the sender’s Internet protocol
    (IP) address, the destination port number and the protocol (method of communication)
    being used.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 早期的防火墙主要依赖于理解发送方的互联网协议（IP）地址、目标端口号和使用的协议（通信方法）。
- en: '| protocol – (in the context of electronic communications) is a set of established
    rules used to send information between different electronic locations.  Protocols
    provide a standard that can be used to send or receive information in an expected
    and understandable format, including information about the source, destination
    and route.  Examples of protocols include Internet protocol (IP), hyper text transfer
    protocol (HTTP), file transfer protocol (FTP), transmission control protocol (TCP),
    border gateway protocol (BGP) and dynamic host configuration protocol (DHCP).Internet
    Protocol – is the set of rules used to send or receive information from or to
    a location on a network, including information about the source, destination and
    route.  Each electronic location (host) has a unique address (the IP address)
    that is used to define the source and the destination.port number – used as part
    of an electronic communication to denote the method of communication being used. 
    This allows the packet to be directed to a program that will know what to do with
    it.packet – (in the context of electronic communication) is a bundle of electronic
    information grouped together for transmission.  The bundle usually includes control
    information to indicate the destination, source and type of content, and the content
    (user information) itself. |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| 协议 - （在电子通信的上下文中）是用于在不同的电子位置之间发送信息的一组已建立的规则。 协议提供了一个标准，可用于以预期和可理解的格式发送或接收信息，包括有关源、目的地和路由的信息。
    协议的示例包括互联网协议（IP）、超文本传输协议（HTTP）、文件传输协议（FTP）、传输控制协议（TCP）、边界网关协议（BGP）和动态主机配置协议（DHCP）。互联网协议
    - 是用于从网络上的位置发送或接收信息的一组规则，包括有关源、目的地和路由的信息。 每个电子位置（主机）都有一个唯一的地址（IP地址），用于定义源和目的地。端口号
    - 用作电子通信的一部分，用于表示正在使用的通信方法。 这允许将数据包定向到一个程序，该程序将知道如何处理它。数据包 - （在电子通信的上下文中）是一组为传输而组合在一起的电子信息。
    这个捆绑通常包括控制信息，以指示目的地、源和内容类型，以及内容（用户信息）本身。 |'
- en: The allowable and prohibited values were stored as the firewall policy in these
    early firewalls.  This setup was known as a packet-filtering approach.  It allowed
    for fast throughput but did not inspect the content of the packets.  This made
    it vulnerable to spoofing.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: '| packet-filtering* – passing or blocking bundles of electronic information
    based on rules. See also packet.spoofing – concealing the true source of electronic
    information by impersonation or other means.  Often used to bypass Internet security
    filters by pretending the source is from a trusted location. |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
- en: In addition to packet-filtering and port blocking, firewalls now include additional
    defenses, including intrusion prevention,  intrusion detection and other methods
    that are explained below.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: Strong firewalls also include a good firewall policy, which can usually be recognized
    by virtue of the fact that it contains only a small number of rules and also displays
    evidence of being reviewed frequently to ensure it remains configured to guard
    against the latest threats.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: Intrusion Prevention and Intrusion Detection
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: '| Intrusion Detection Systems (IDS) – computer programs that monitor and inspect
    electronic communications that pass through them, with the purpose to detect,
    log (record) and raise alerts on any suspected malicious or otherwise unwanted
    streams of information. IDS are a variation of Intrusion Detection and Prevention
    Systems, as they have no ability to block the activity; they only monitor, inspect
    and alert.Intrusion Detection and Prevention Systems (IDPS) – computer programs
    that monitor and inspect electronic communications that pass through them, with
    the purpose and ability (i) to block and log (record) key information about any
    known malicious or otherwise unwanted streams of information and (ii) to log and
    raise alerts about any other traffic that is suspected (but not confirmed) to
    be of a similar nature. These are usually placed in the communication path to
    allow the IDPS to prevent unwanted information from entering or leaving a network
    by dropping or blocking packets.  IDPS can also clean some electronic data to
    remove any unwanted or undesirable packet components.Intrusion Prevention Systems
    (IPS) – see Intrusion Detection and Prevention Systems.  A slight variation in
    IPS, compared to IDPS, is that they may not collect any detection information
    and may only serve to block (prevent) unwanted traffic based on direct rules or
    instructions they receive.  |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
- en: Prevention is always preferable to detection alone.  If an intrusion is detected
    after the event, then the overhead to correct the issue is greater.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: There are two key challenges for these systems.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: 'The first problem is determining what a malicious or unwanted communication
    looks like.  This can be achieved by three different methods:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: Storing known attack communication patterns, which are known as signatures. 
    These can then be specifically detected, and (in the case of intrusion prevention),
    blocked.
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is also possible for the programs to review statistics and look for any behavior
    that is unusual or anomalous.  This form of detection is known as statistical
    anomaly-based detection.
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sometimes, malicious or unwanted communications adjust the packets in which
    they are sent so the protocol differs from its usual format.  Detecting significant
    variations in protocol format is thus another way to identify malicious communications. 
    This is known as stateful protocol analysis detection.
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The second and more significant issue is that people want their communications
    to be transmitted and received quickly and without interruption.  Imposing numerous
    detection rules and frequently encountering detection and prevention systems slows
    down communications, so intrusion prevention and detection involves a balancing
    act between security and performance.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: If too many rules and restrictions are in place, electronic traffic (communications)
    can be lost or delayed.  If too few are in place, unwanted data can enter and
    leave without being detected or blocked.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: Data Loss Prevention
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: '| Data Loss Prevention* (DLP) – is a term that describes blocking specific
    types of information from leaving an electronic device.  There are dedicated types
    of hardware and software that can be used to facilitate this objective. |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
- en: One of the key objectives for any attacker is to steal information of value. 
    This valuable information usually has certain attributes that can also be used
    to defend it.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: Using these information attributes to help prevent data loss depends on various
    methods of bolstering security by positioning technologies in key parts of a digital
    landscape.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: Host-based data loss prevention is one such technology that can help to stop
    people from sending critical, sensitive or otherwise valuable information outside
    an enterprise’s network.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: Network-based data loss prevention technologies can control the types of information
    that are allowed to be transmitted between locations.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: It is up to the organization that is putting data loss prevention in place to
    define the business rules (criteria) that will be applied to permit or prevent
    certain types of information from traveling. Information classification, covered
    earlier in the book, can be used in such data loss prevention security; however,
    advanced data loss programs can also automatically detect the presence of certain
    information, even if it has not been classified.  Any attempts to move information
    against company rules can then be either blocked or challenged.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: Any critical information that is permitted to travel can also be made more secure
    through the use of additional encryption (covered below).
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: Specialized data loss prevention technologies have proven particularly useful
    when applied directly to the devices (computers, smartphones and tablets) that
    people use and also on critical business applications that transact large volumes
    of information; for example, on email services and financial systems.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: In addition to blocking the movement of data, these security programs can also
    raise alerts and can even insert data that helps trace the origin and destination
    of packets without the user’s knowledge.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: These technologies are also very valuable in locations where substantial personal
    information is transacted.  They can help ensure that privacy regulations are
    provably enforced.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: Encryption / cryptography
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: 'The art of encoding messages so that they cannot be read by anybody who intercepts
    them has existed for a very long time.  For example, around 160 BCE the Greek
    historian Polybius invented and described a cryptographic technique known as the
    Polybius Square.  The Cypher Research Laboratories in Australia describes it like
    this: “Messages were encoded by substituting the letter in the text by one that
    is three positions to the right. A became D, V became Y etc.” The first person
    known to use this tool was Julius Caesar.'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: Modern cryptographic techniques are somewhat harder to decipher, but the advantages
    of encryption – that it is a security technique that can be applied directly to
    data, and that the data is just a useless jumble of characters without the ability
    to decrypt the information – remain valid.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: 'Although it is very useful in helping to secure general communications, there
    are two major problems with encryption:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: The first problem is that encrypted information is very much like carrying a
    diplomatic bag, or pouch.  Nobody can inspect the contents unless he or she has
    the key or can crack open the container.  That is an advantage if someone wants
    to prevent the information from slipping into the wrong hands, but it also means
    that the contents of nearly all the information streaming past an organization’s
    other security measures cannot be inspected.  This is covered further in the next
    chapter.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: The other big problem is that encryption does not last. It works reasonably
    well if you want to keep something secure that is not time-sensitive.  However,
    all encryption can eventually be broken, given enough time and resources.  Encryption
    that is nearly impossible to decrypt today will be relatively easy to break ten
    years down the line.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: Even with these limitations, encryption is still a vital part of a security
    toolset.  It prevents information that is intercepted during the communications
    phase from being immediately vulnerable.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: Automatic encryption and decryption techniques can (for example) be placed on
    email services to help protect messages during transmission.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: Proxy servers
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: '| proxy server – is a program used to provide intermediate services between
    a requested transaction and its destination.  Instead of sending the transaction
    ‘as is,’ it can adjust some of the information to help secure the anonymity of
    the sender.  In addition, it may store (cache) any information that is accessed
    often to help speed up response times. |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
- en: The primary security role of a proxy server is to help keep information about
    the sender or requestor hidden or secret to prevent that information from being
    misused.  For example, when you request a page on the Internet, instead of revealing
    your name and precise computer details, the proxy server can substitute other
    information.  When the response to the request is received, it can then seamlessly
    direct the requested information back to you.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: Proxy servers enhance security by hiding exact information about locations and
    users in a particular network.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: Attackers also frequently use proxy servers for the same purposes.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: Identity and Access Controls
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: '| identity and access controls – method(s) of regulating how each person and
    computer service is confirmed to be who they claim to be (authentication) and
    how their permissions are monitored. |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
- en: Determining whether each information transaction is legitimate is simpler when
    the identity of the requestor and his or her permission to do what he or she is
    requesting can be easily confirmed.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: The greater the number of different identity and access systems that a given
    enterprise manages, the more likely these systems are to be attacked.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: Security architects usually aim to use a single primary technology to control
    identity and high-level access rights across an enterprise’s entire digital landscape
    as part of most security strategies.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: This allows each person’s access permissions to be easily changed or revoked. 
    It also allows any attempts to fraudulently enter an account to be easily identified.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: Each separate username and password usually indicates that a separate identity
    management system is being utilized.  The more separate identity management systems
    there are, the greater the likelihood of systems being compromised without being
    noticed.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: Secure identity management systems now use processes that even allow external
    systems to use a single, central username and password without the need to share
    password information back with the external system.  For example, a cloud service
    can use an enterprises username and password through a connection that validates
    the authenticity without revealing anything more than whether or not the access
    attempt is valid.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: Although access permissions are largely a procedural control – for example,
    ensuring that each person is assigned the least amount of privilege required to
    perform his or her duties – there is also a technical aspect.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: Access rights are administered and enforced through applications and systems.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, by centrally tracking privilege levels across different systems,
    or by enforcing privilege restrictions from a central location, attempts to break
    business rules that concern access can be more easily identified.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: Containerization and virtualization
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: With the increase in webpages and emails that contain malware, there are now
    many technologies that can isolate activities like Internet surfing and email
    management to prevent them from accidently infecting sensitive data and systems. 
    These technologies cordon off these Internet activities so they are performed
    in secure environments that cannot spread malware even if they become infected.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: These technologies make it possible to use a single device, but at the same
    time to isolate and process web surfing and email activities in such a way that
    it is very unlikely that any infection will affect the physical device.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: These technologies use a technique called ‘virtualization,’ which creates an
    isolated software replica to replace an electronic device’s real operating system,
    then creates, uses and deletes a new replica during each use.  Even if the isolated
    replica acquires an infection, its configuration can prevent the malware from
    escaping and can then fully delete it as a matter of routine after each use. 
    Each time a new Web surfing or email session begins, a completely new software
    replica of the operating environment is created and is then deleted when the session
    is completed.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: Initially, virtualization software was sold as a separate security technology,
    but it is now incorporated into some operating systems and applications.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: Penetration testing
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: '| penetration test (also known as an attack and penetration test or pen. test)  –
    checks and scans on any application, system or website to identify any potential
    security gaps (vulnerabilities) that could be exploited.  Once the vulnerabilities
    are identified, this process then goes on to identify the extent to which these
    vulnerabilities could be leveraged in an attack (the penetration possibilities). 
    Usually these checks are performed in a test area and emulate the same techniques
    that could be used by an attacker.  This is to prevent any inadvertent operational
    disruption.  The checks are typically conducted before any application or site
    is first used, and also on a periodic (repeating) basis; for example, each time
    the program is updated or every 6 months.  Any significant gaps must be addressed
    (fixed) in a timeframe appropriate to the scale of the risk.  Not to be confused
    with the term vulnerability assessment, which only identifies gaps without examining
    how they could be leveraged.vulnerability – (in the context of cybersecurity)
    a weakness, usually in design, implementation or operation of software (including
    operating systems), that could be compromised and result in damage or harm. |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
- en: There are a significant number of potential security gaps that can be present
    inside each computer program.  These programs are represented on an attack surface
    by applications and systems.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: The only way to check for the presence of these vulnerabilities is through a
    process referred to as penetration testing.  This process can utilize ethical
    hackers that an enterprise pays to manually try to identify security weaknesses. 
    There are also automated tools that can perform similar assessments.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: White-box penetration testing (also known as clear-box testing) is the term
    used to describe a situation in which the technical layout of the computer program
    being tested has been made available for the penetration test.  This makes the
    test easier and cheaper to perform, but usually results in the identification
    of more issues than black-box testing identifies.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: Black-box penetration testing is the term used to describe a situation in which
    the penetration testers are given no advance information about the computer program’s
    technical details.  Although this scenario usually reflects the characteristics
    of a true attack more accurately (unless the attackers manage to get a copy of
    the technical details), it is more expensive and usually less effective in locating
    all potential security vulnerabilities.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: Any significant gaps identified during penetration testing (or at any other
    time) must be fixed.  Usually, this is completed before putting a program into
    real-world use.  If a gap is identified in a program that is already in real-world
    use, the corrective approach will depend on a comparison of the risks and costs
    that will be incurred if the vulnerability is exploited versus the costs the business
    would incur from an interim suspension of the program.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability assessment
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: '| vulnerability assessment – the identification and classification of security
    gaps in a computer, software application, network or other section of a digital
    landscape.  This is usually a passive identification technique that aims only
    to identify the gaps, without exploring how those gaps could be used in an attack. 
    This should not be confused with a penetration test, which may include information
    from a vulnerability assessment, but which will go on to explore how any vulnerabilities
    can be exploited.port scanning – a process, usually run by computer, to detect
    open access points (ports) that could be used to infiltrate or exfiltrate electronic
    information into or out of an enterprise. |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
- en: Penetration testing is only one method of identifying vulnerabilities; indeed,
    there are many others.  Keeping up to date with industry notifications about new
    vulnerabilities is one such method. Running frequent or continuous port scanning
    and full vulnerability assessments are two further examples.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: Knowing which potential vulnerabilities exist is only part of the process. 
    It is important to follow through and close or otherwise mitigate these potential
    gaps in an appropriately prioritized order.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: Collectively, all of the above methods represent the most current primary methods
    of technical protection for electronic devices and the information they process,
    store and transact.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
- en: However, the speed with which we adopt new technologies means that attackers
    are continuously seeking new and more ingenious ways of breaching these defenses,
    so unfortunately they do not stay current for very long.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
- en: One major defense technique we have not yet covered is the use of security coordination
    programs that unify threat intelligence.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
- en: Now is a good time to look at how these threats and attacks are evolving and
    what we can do to counteract these new exploits.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
