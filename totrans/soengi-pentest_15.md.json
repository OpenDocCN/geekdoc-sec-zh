["```\nroot@pentest:/home/# ifconfig eth0 down\n```", "```\nroot@pentest:/home/# macchanger -m BE:EF:BE:EF:BE:EF eth0\n```", "```\nPermanent MAC: 00:0c:29:ed:1d:af (VMware, Inc.)\n```", "```\nCurrent\u00a0MAC: 00:0c:29:ed:1d:af (VMware, Inc.)\n```", "```\nNew\u00a0\u00a0MAC: be:ef:be:ef:be:ef (unknown)\n```", "```\nsudo ifconfig en1 ether BE:EF:BE:EF:BE:EF\n```", "```\nroot@raspberrypi:~# sudo passwd pi\n```", "```\nEnter new UNIX password:\n```", "```\nRetype new UNIX password:\n```", "```\npasswd: password updated successfully\n```", "```\nroot@raspberrypi:~#\n```", "```\nroot@raspberrypi:~# sudo apt-get update && sudo apt-get upgrade && sudo apt-get dist-upgrade\n```", "```\nroot@raspberrypi:~# ssh-keygen -t rsa\n```", "```\nroot@raspberrypi:~# ssh-copy-id -i /root/.ssh/id_rsa.pub root@myserver\n```", "```\nroot@myserver\u2019s password:\n```", "```\nroot@raspberrypi:~# ssh root@192.168.1.156\n```", "```\nThe authenticity of host'192.168.1.156 (192.168.1.156)' can't be established.\n```", "```\nECDSA key fingerprint is f6:ff:45:04:2b:f4:33:42:34:a2:f2:06:78:da:f6:52.\n```", "```\nAre you sure you want to continue connecting (yes/no)? yes\n```", "```\nWarning: Permanently added'192.168.1.156' (ECDSA) to the list of known hosts.\n```", "```\nWelcome to Ubuntu 12.10 (GNU/Linux 3.5.0-17-generic x86_64)\n```", "```\n* Documentation:\u00a0https://help.ubuntu.com/\n```", "```\n\u00a0System information as of Mon Sep 16 22:09:51 BST 2013\n```", "```\n\u00a0System load:\u00a00.35\u00a0\u00a0\u00a0Processes:\u00a0\u00a0\u00a079\n```", "```\n\u00a0Usage of /:\u00a05.7% of 18.45\u00a0GB\u00a0Users logged in:\u00a01\n```", "```\n\u00a0Memory usage: 4%\u00a0\u00a0\u00a0IP address for eth0: 192.168.1.156\n```", "```\n\u00a0Swap usage:\u00a00%\n```", "```\n\u00a0Graph this data and manage this system at https://landscape.canonical.com/\n```", "```\nLast login: Mon Sep 16 22:09:06 2013\n```", "```\nroot@ubuntusrv:~#\n```", "```\nroot@raspberrypi:~# ssh -N -R 5555:localhost:22 root@192.168.1.156\n```", "```\nroot@ubuntusrv:~#ssh -l pi -p 5555 localhost\n```", "```\npi@localhost's password:\n```", "```\nLast login: Tue Sep 17 19:26:23 2013 from localhost\n```", "```\npi@raspberrypi ~ $\n```", "```\npi@raspberrypi ~ $ sudo apt-get install autossh\n```", "```\nroot@raspberrypi:~# ssh -N -R 5555:localhost:22 root@192.168.1.156\n```", "```\npi@raspberrypi ~ autossh -M 13000 -f -N -R 5555:localhost:22 root@192.168.1.156\n```", "```\npi@raspberrypi ~ autossh -M 13000 -o \"ServerAliveInterval 60\" -o \"ServerAliveCountMax 3\" -f -N -R 5555:localhost:22 root@192.168.1.156\n```", "```\n# autossh tunnel at boot\n```", "```\nautossh -M 13000 -o \"ServerAliveInterval 60\" -o \"ServerAliveCountMax 3\" -f -N -R 5555:localhost:22 root@192.168.1.156\n```", "```\nexit 0\n```", "```\npi@raspberrypi ~ $ sudo ./umtskeeper --sakisoperators \"USBINTERFACE='0' OTHER='USBMODEM' USBMODEM='12d1:1003' APN='three.co.uk'\u00a0APN_USER='' APN_PASS=\"\"\"\n```", "```\npi@raspberrypi ~ $ lsusb\n```", "```\nBus 001 Device 002: ID 0424:9512 Standard Microsystems Corp.\n```", "```\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\n```", "```\nBus 001 Device 003: ID 0424:ec00 Standard Microsystems Corp.\n```", "```\nBus 001 Device 004: ID 12d1:1003 Huawei Technologies Co., Ltd. E220 HSDPA Modem / E230/E270/E870 HSDPA/HSUPA Modem\n```", "```\npi@raspberrypi ~ $ sudo /home/pi/umtskeeper/umtskeeper --sakisoperators \"USBINTERFACE='0' OTHER='USBMODEM' USBMODEM='12d1:1003' APN='three.co.uk' APN_USER='' APN_PASS=\"\"\" &\n```", "```\n[1] 3692\n```", "```\npi@raspberrypi ~ $\u00a0---\n```", "```\n2013-09-19 21:04:05 Start: PID = 3693\n```", "```\n2013-09-19 21:04:05 Sending SIGTERM signal to running program instance with PID=400.\n```", "```\n2013-09-19 21:04:05 stats period = 8\u00a0s, connection check period = 32\u00a0s\n```", "```\n\u00a0Internet status:\n```", "```\n\u00a0Network link status on ppp0: unknown\n```", "```\n\u00a0Cell network: Connected.\n```", "```\n2013-09-19 21:04:15 Internet connection is DOWN. Calling Sakis3G connect...\n```", "```\n\u00a0Sakis3G cmdLine: nice /home/pi/umtskeeper/sakis3g connect\u00a0USBINTERFACE='0' OTHER='USBMODEM' USBMODEM='12d1:1003' APN='three.co.uk' APN_USER='' APN_PASS=\n```", "```\n\u00a0Sakis3G says...\n```", "```\n\u00a0E160 connected to 3 (23420).\n```", "```\n2013-09-19 21:04:25 Testing connection...\n```", "```\n2013-09-19 21:04:34 Success... we are online!\n```", "```\npi@raspberrypi ~ $ ifconfig ppp0\n```", "```\nppp0\u00a0\u00a0Link encap:Point-to-Point Protocol\n```", "```\n\u00a0\u00a0\u00a0inet addr:10.128.9.181\u00a0P-t-P:10.64.64.64\u00a0Mask:255.255.255.255\n```", "```\n\u00a0\u00a0\u00a0UP POINTOPOINT RUNNING NOARP MULTICAST\u00a0MTU:1500\u00a0Metric:1\n```", "```\n\u00a0\u00a0\u00a0RX packets:97 errors:0 dropped:0 overruns:0 frame:0\n```", "```\n\u00a0\u00a0\u00a0TX packets:130 errors:0 dropped:0 overruns:0 carrier:0\n```", "```\n\u00a0\u00a0\u00a0collisions:0 txqueuelen:3\n```", "```\n\u00a0\u00a0\u00a0RX bytes:12363 (12.0 KiB)\u00a0TX bytes:16949 (16.5 KiB)\n```", "```\n/home/pi/umtskeeper --sakisoperators \"USBINTERFACE='0' OTHER='USBMODEM' USBMODEM='12d1:1003' APN='three.co.uk' SIM_PIN='1234' APN_USER='0' APN_PASS='0'\" --sakisswitches \"--sudo --console\" --devicename'Huawei' --log --silent --monthstart 8 --nat'no' &\n```", "```\npi@raspberrypi ~ $ sudo apt-get install git\n```", "```\npi@raspberrypi ~ $ git clonehttps://github.com/pwnieexpress/Raspberry-Pwn.git\n```", "```\nAt this point, try changing into the Raspberry-Pwn directory with cd Raspberry-Pwn and run the installation script.\n```", "```\npi@raspberrypi ~/Raspberry-Pwn $ sudo./INSTALL_raspberry_pwn.sh\n```", "```\n\u00a0\u00a0\u00a0=== Raspberry Pwn Release 0.2 ===\n```", "```\n\u00a0A Raspberry Pi Pentesting suite by PwnieExpress.com\n```", "```\n----------------------------------------------------------------\n```", "```\n\u00a0This installer will load a comprehensive security pentesting software suite onto your Raspberry Pi. Note that the Debian Raspberry Pi distribution must be installed onto the SD card before proceeding. See README.txt for more information.\n```", "```\nPress ENTER to continue, CTRL+C to abort.\n```", "```\n[+] Exploit-DB installed in /pentest.\n```", "```\n[+] Setting default RAM allocation (disabled!)\n```", "```\n[!] If your RPi board only has 256\u00a0MB ram please set split to\n```", "```\n\u00a0224/32 using raspi-config.\n```", "```\n---------------------------------------------------------------\n```", "```\nRaspberry Pwn Release 0.2 installed successfully!\n```", "```\n---------------------------------------------------------------\n```", "```\n[+] In order for the new RAM allocation to take effect, we must\n```", "```\n[+] now reboot the pi. Press [Ctrl-C] to exit without rebooting.\n```", "```\n#!/usr/bin/python\n```", "```\nfrom Adafruit_CharLCDPlate import Adafruit_CharLCDPlate\n```", "```\nfrom subprocess import *\n```", "```\nfrom time import sleep, strftime\n```", "```\nlcd = Adafruit_CharLCDPlate()\n```", "```\ncmd = \"ip addr show eth0 | grep inet | awk'{print $2}' | cut -d/ -f1\"\n```", "```\ncmd2 = \"ip addr show ppp0 | grep inet | awk'{print $2}' | cut -d/ -f1\"\n```", "```\nlcd.begin(16,1)\n```", "```\ndef run_cmd(cmd):\n```", "```\n\u00a0\u00a0p = Popen(cmd, shell=True, stdout=PIPE)\n```", "```\n\u00a0\u00a0output = p.communicate()[0]\n```", "```\n\u00a0\u00a0return output\n```", "```\nwhile 1:\n```", "```\n\u00a0\u00a0lcd.clear()\n```", "```\n\u00a0\u00a0ipaddr = run_cmd(cmd)\n```", "```\n\u00a0\u00a0ipaddr2 = run_cmd(cmd2)\n```", "```\n\u00a0\u00a0lcd.message(ipaddr2)\n```", "```\n\u00a0\u00a0lcd.message(ipaddr)\n```", "```\n\u00a0\u00a0sleep(1)\n```", "```\npi@raspberrypi ~ $ sudo apt-get install build-essential\n```", "```\npi@raspberrypi ~ $ sudo apt-get install libssl-dev\n```", "```\npi@raspberrypi ~ $ mkdir aircrack\n```", "```\npi@raspberrypi ~ $ cd aircrack\n```", "```\npi@raspberrypi ~ $ wget http://download.aircrack-ng.org/aircrack-ng-1.2-beta1.tar.gz\n```", "```\npi@raspberrypi ~/aircrack $ tar -zxvf aircrack-ng-1.2-beta1.tar.gz\n```", "```\npi@raspberrypi ~/aircrack $ cd aircrack-ng-1.2-beta1/\n```", "```\npi@raspberrypi ~/aircrack/aircrack-ng-1.2-beta1 $ make\n```", "```\npi@raspberrypi ~/aircrack/aircrack-ng-1.2-beta1 $ sudo make install\n```", "```\npi@raspberrypi ~/aircrack/aircrack-ng-1.2-beta1 $ sudo apt-get install iw\n```", "```\npi@raspberrypi ~ $ sudo airodump-ng-oui-update\n```", "```\npi@raspberrypi ~ $ sudo airmon-ng start wlan0\n```", "```\nInterface\u00a0Chipset\u00a0\u00a0\u00a0Driver\n```", "```\nwlan0\u00a0\u00a0\u00a0Atheros AR9271\u00a0\u00a0ath9k - [phy0]\n```", "```\n\u00a0\u00a0\u00a0(monitor mode enabled on mon0)\n```", "```\npi@raspberrypi ~ $ sudo airodump-ng -w /home/pi/wirelesscap mon0\n```", "```\nCH\u00a01 ][ Elapsed: 32\u00a0s ][ 2013-09-21 12:02\n```", "```\n\u00a0BSSID\u00a0\u00a0\u00a0PWR\u00a0Beacons\u00a0#Data, #/s\u00a0CH\u00a0MB\u00a0ENC\u00a0CIPHER AUTH ESSID\n```", "```\n\u00a012:FE:F4:07:A1:E8\u00a0-61\u00a0\u00a060\u00a0\u00a00\u00a00\u00a06\u00a054e. OPN\u00a0\u00a0\u00a0BTWiFi-with-FON\n```", "```\n\u00a002:FE:F4:07:A1:E8\u00a0-61\u00a0\u00a068\u00a0\u00a00\u00a00\u00a06\u00a054e. OPN\u00a0\u00a0\u00a0BTWiFi\n```", "```\n\u00a06\u00a0A:C6:1\u00a0F:E8:84:2D\u00a0\u221270\u00a0\u00a0125\u00a0\u00a00\u00a00\u00a01\u00a054e\u00a0OPN\u00a0\u00a0\u00a0BTWiFi-with-FON\n```", "```\n\u00a010:C6:1\u00a0F:E8:84:2B\u00a0\u221269\u00a0\u00a0164\u00a0\u00a08\u00a00\u00a01\u00a054e\u00a0WPA2 CCMP\u00a0PSK\u00a0BTHub3-P3HP\n```", "```\n\u00a06\u00a0A:C6:1\u00a0F:E8:84:2C\u00a0\u221267\u00a0\u00a0168\u00a0\u00a00\u00a00\u00a01\u00a054e\u00a0OPN\u00a0\u00a0\u00a0BTWiFi\n```", "```\n\u00a0\u00a0BSSID\u00a0\u00a0\u00a0STATION\u00a0\u00a0\u00a0PWR\u00a0Rate\u00a0Lost\u00a0Frames\u00a0Probe\n```", "```\n\u00a0\u00a000:FE:F4:07:A1:E8\u00a0B8:8D:12:3A:75:00\u00a0-60\u00a00 - 1\u00a0\u00a00\u00a0\u00a019\n```", "```\nroot@ubuntusrv:~# sudo apt-get install openvpn\n```", "```\nroot@ubuntusrv:~# cp -R /usr/share/doc/openvpn/examples/easy-rsa /etc/openvpn\n```", "```\nroot@ubuntusrv:~# cd /etc/openvpn/easy-rsa/2.0\n```", "```\nroot@ubuntusrv:/etc/openvpn/easy-rsa/2.0#. ./vars\n```", "```\nroot@ubuntusrv:/etc/openvpn/easy-rsa/2.0#./clean-all\n```", "```\nroot@ubuntusrv:/etc/openvpn/easy-rsa/2.0#./build-ca\n```", "```\nGenerating a 1024\u00a0bit RSA private key\n```", "```\n................................................................................++++++\n```", "```\n...........++++++\n```", "```\nwriting new private key to'ca.key'\n```", "```\n-----\n```", "```\nYou are about to be asked to enter information that will be incorporated\n```", "```\ninto your certificate request.\n```", "```\nWhat you are about to enter is what is called a Distinguished Name or a DN.\n```", "```\nThere are quite a few fields but you can leave some blank\n```", "```\nFor some fields there will be a default value,\n```", "```\nIf you enter'.', the field will be left blank.\n```", "```\n-----\n```", "```\nCountry Name (2 letter code) [UK]:\n```", "```\nState or Province Name (full name) [UK]:\n```", "```\nLocality Name (eg, city) [Leeds]:\n```", "```\nOrganization Name (eg, company) [hackjobinc]:\n```", "```\nOrganizational Unit Name (eg, section) []:\n```", "```\nCommon Name (eg, your name or your server's hostname) [hackjobinc CA]:\n```", "```\nName []:server\n```", "```\nEmail Address [me@myhost.mydomain]:\n```", "```\nroot@ubuntusrv:/etc/openvpn/easy-rsa/2.0#\n```", "```\nroot@ubuntusrv:/etc/openvpn/easy-rsa/2.0#./build-key-server server\u00a0#Answer \u2018Y\u2019 when asked to sign the certificate and then again when asked to commit.\n```", "```\nroot@ubuntusrv:/etc/openvpn/easy-rsa/2.0#./build-key client\u00a0\u00a0\u00a0#This generates a client certificate\n```", "```\nroot@ubuntusrv:/etc/openvpn/easy-rsa/2.0#./build-dh\u00a0\u00a0\u00a0#Diffie Helman Setup\n```", "```\ncd /etc/openvpn/easy-rsa/2.0/keys\n```", "```\ncp ca.crt ca.key dh1024.pem server.crt server.key /etc/openvpn\n```", "```\ncp /usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz /etc/openvpn\n```", "```\ngunzip /etc/openvpn/server.conf.gz\n```", "```\nroot@ubuntusrv:/# cd /etc/openvpn/easy-rsa/2.0/keys\n```", "```\nroot@ubuntusrv:/# scp piclient.key piclient.crt ca.crt ca.key root@192.168.1.154:/etc/openvpn\n```", "```\npi@raspberrypi ~ $ sudo cp /usr/share/doc/openvpn/examples/sample-config-files/client.conf /etc/openvpn\n```", "```\nsudo -i\n```", "```\niptables -F; iptables -t nat -F; iptables -t mangle -F\n```", "```\niptables -t nat -A POSTROUTING -o eth0 -j SNAT --to 192.168.1.154\u00a0\u00a0\u00a0#192.168.1.154 is the address of the eth0 interface of our Pi which is on the client network\n```", "```\necho 1 > /proc/sys/net/ipv4/ip_forward\u00a0\u00a0\u00a0#Allows the Pi to route traffic in and out, basically turning it into a router.\n```", "```\nroute 192.168.1.0 255.255.255.0\n```", "```\nmkdir /etc/openvpn/ccd\n```", "```\ncd /etc/openvpn/ccd\n```", "```\nnano client\n```", "```\niroute 192.168.1.0 255.255.255.0\n```", "```\n/etc/init.d/openvpn restart\n```", "```\nroot@ubuntusrv:~# route -n\n```", "```\nKernel IP routing table\n```", "```\nDestination \u00a0Gateway\u00a0\u00a0\u00a0Genmask\u00a0\u00a0\u00a0Flags Metric Ref\u00a0Use Iface\n```", "```\n0.0.0.0\u00a0\u00a0\u00a0192.168.1.254\u00a00.0.0.0\u00a0\u00a0\u00a0UG\u00a00\u00a0\u00a0\u00a00\u00a0\u00a0\u00a00 eth0\n```", "```\n10.8.0.0\u00a0\u00a010.8.0.2\u00a0\u00a0255.255.255.0\u00a0UG\u00a00\u00a0\u00a00\u00a0\u00a00 tun0\n```", "```\n10.8.0.2\u00a0\u00a00.0.0.0\u00a0\u00a0255.255.255.255 UH\u00a00\u00a0\u00a00\u00a0\u00a00 tun0\n```", "```\n172.16.0.0\u00a0\u00a00.0.0.0\u00a0\u00a0255.255.0.0\u00a0U\u00a00\u00a0\u00a00\u00a0\u00a00 eth1\n```", "```\n192.168.1.0\u00a010.8.0.2\u00a0\u00a0255.255.255.0 UGH\u00a00\u00a0\u00a00\u00a0\u00a00 tun0\n```"]