- en: Chapter 12
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 第 12 章
- en: Supporting an Attack with Technology
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用技术支持攻击
- en: Richard Ackroyd,    Senior Security Engineer, RandomStorm Limited
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Richard Ackroyd，高级安全工程师，RandomStorm 有限公司
- en: Everybody loves a gadget, but aside from being fun toys, they can also be leveraged
    to provide another dimension to social engineering attacks. The old cliche is
    to drop a wireless access point into the corporate network and walk away, but
    is this practical and are there better tools available? This chapter will cover
    3G dropboxes, wireless tools, and 3G KVM switches. We will walk through the process
    of building a 3G-enabled dropbox with full Virtual Private Network (VPN) support
    into your target network.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 每个人都喜欢小工具，但除了是有趣的玩具外，它们还可以被利用以为社会工程攻击提供另一个维度。老套路是把无线接入点放入企业网络中并离开，但这实际吗？还有更好的工具吗？本章将涵盖
    3G dropbox、无线工具和 3G KVM 开关。我们将步骤性地介绍如何在目标网络中构建支持完整虚拟专用网络（VPN）的 3G 启用 dropbox。
- en: Keywords
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关键词
- en: RaspberryPi; 3G; dropbox; Raspbian; OpenVPN; reverse SSH
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: RaspberryPi；3G；dropbox；Raspbian；OpenVPN；反向 SSH
- en: Information in this chapter
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章信息
- en: Attaching to the Network
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 连接到网络
- en: Cable and Live Port Testers
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 电缆和实时端口测试仪
- en: Netbooks
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 上网本
- en: What Subnet Am I In?
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我在哪个子网？
- en: Port Security
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 端口安全
- en: Attaching to the Network Remotely
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 远程连接到网络
- en: The Dropbox
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Dropbox
- en: Dropbox Challenges
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Dropbox 挑战
- en: Pwnie Express
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Pwnie Express
- en: RaspberryPi
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: RaspberryPi
- en: Intel NUC
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Intel NUC
- en: Also Rans
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 亦属次等
- en: Building Your Own ‘Dropbox’
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 构建您自己的‘Dropbox’
- en: Installing the Operating System
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 安装操作系统
- en: Phoning Home
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 回家打电话
- en: Setting Up Certificate Based Authentication
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 设置基于证书的身份验证
- en: Creating the SSH Reverse Tunnel
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 SSH 反向隧道
- en: Making It Stick
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 让它固定
- en: Adding 3G/4G Support
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 添加 3G/4G 支持
- en: Choosing a Dongle
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 选择一个 Dongle
- en: Screens,Wireless and Other Hardware
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕，无线和其他硬件
- en: The Adafruit Pi Plate
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Adafruit Pi Plate
- en: Wireless Dongles
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 无线 Dongle
- en: Choosing A Case For Your Dropbox
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 为您的 Dropbox 选择一个外壳
- en: Adding OpenVPN to Our Backdoor
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 将 OpenVPN 添加到我们的后门
- en: Routing Issues and How to Overcome them
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 路由问题及其克服方法
- en: Alternative Dropboxes
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 替代 Dropbox
- en: 3G and IP KVMs
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 3G 和 IP KVM
- en: Routers
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 路由器
- en: Wireless Access Points
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 无线接入点
- en: Compromising Internal Systems
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 妥协内部系统
- en: Other Useful Gadgets
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 其他有用的小工具
- en: Keyloggers
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 按键记录器
- en: Audio Recording Devices
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 音频录音设备
- en: Teensy USB
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Teensy USB
- en: Malicious USB Sticks
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意 USB 驱动器
- en: WiFi Pineapple
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: WiFi Pineapple
- en: Introduction
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍
- en: In [Chapter 11](CHP011.xhtml), we covered the physical attack vector which can
    often make up the majority of the social engineering assessment.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第 11 章](CHP011.xhtml)中，我们介绍了物理攻击向量，这通常占据社会工程评估的大部分内容。
- en: This chapter is all about the gadgets. We will be covering the different types
    of technologies available to us that can augment our assessment.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 本章重点介绍了各种小工具。我们将涵盖可用于增强我们评估的不同类型技术。
- en: We will look at the process of connecting into the target organization’s network
    and the common stumbling blocks that can prevent it happening. We will also take
    a look at devices that can enable us to carry out the rest of our work from a
    remote location, sometimes known as “dropboxes.”
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将研究连接到目标组织网络的过程以及可能阻碍此过程的常见障碍。我们还将研究一些设备，这些设备可以让我们能够从远程位置执行剩余的工作，有时被称为“dropboxes”。
- en: There are some pieces of equipment that are always useful to have on your person
    when attempting the physical access portion of your assessment, so we will cover
    these too.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在尝试评估的物理访问部分时，始终携带有用设备是很有用的，因此我们也将涵盖这些设备。
- en: We will round up the chapter by taking a look at the WiFi Pineapple to aid in
    wireless attacks during the engagement.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过查看 WiFi Pineapple 来结束本章，以帮助在参与过程中进行无线攻击。
- en: Attaching to the network
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 远程连接到网络
- en: If social engineering assessments are being performed on a regular basis, there
    is going to be a need to exfiltrate data. This is a simulation of an actual attack
    after all. This can be in the form of a filing cabinet raid, the removal of corporate
    property, or by attaching to the network and hacking your way to the objective.
    In this section, some of the obstacles that will be encountered and potential
    workarounds are covered, as well as some technologies that can be useful in this
    task.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果定期进行社会工程评估，就会需要外泄数据。毕竟，这是对实际攻击的模拟。这可以是文件柜突袭，公司财产的移除，或者连接到网络并通过黑客方式达到目标。在本节中，将涵盖一些可能遇到的障碍和潜在的解决方法，以及在此任务中可能有用的一些技术。
- en: Cable and live port testers
  id: totrans-52
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 电缆和实时端口测试仪
- en: Typical cable testers require access to both ends of the physical network cable,
    making them little use in this scenario. If a consultant walks into a room full
    of patch ports, how do they quickly determine which ports are live, so that they
    can shave some time off their testing? There is an equipment available that can
    do this, although most of the options are prohibitively expensive.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的电缆测试仪需要访问物理网络电缆的两端，因此在这种情况下几乎没有用处。如果顾问走进一个充满补丁端口的房间，他们如何快速确定哪些端口是活动的，以便能够节省一些测试时间？虽然有一种设备可以做到这一点，但大多数选择价格过高。
- en: The first option is the Smartronix LinkCheck—[http://www.smartronixstore.com/index.cfm?fuseaction=product.display&Product_ID=18](http://www.smartronixstore.com/index.cfm?fuseaction=product.display&Product_ID=18).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个选项是 Smartronix LinkCheck — [http://www.smartronixstore.com/index.cfm?fuseaction=product.display&Product_ID=18](http://www.smartronixstore.com/index.cfm?fuseaction=product.display&Product_ID=18)。
- en: It is a small device that will determine link availability as well as the speed
    of the connection. They retail at about $60 and are probably the most cost-effective
    way to perform basic checking of network connections.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个小型设备，可以确定链接的可用性以及连接的速度。它们的零售价约为60美元，可能是执行基本网络连接检查的最具成本效益的方式。
- en: Smartronix also makes a more expensive device, the Linkup, which can put data
    onto the wire for more exhaustive testing.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Smartronix 还制造了一款更昂贵的设备，Linkup，可以将数据放入线路进行更全面的测试。
- en: The next option is to look at devices made by Fluke Networks, but these will
    typically cost thousands of pounds. They are very cool pieces of kit and massively
    useful if working with large enterprise networks but are difficult to justify
    in a pentesting or social engineering business. These devices will do everything
    from physical connectivity testing to Dynamic Host Configuration Protocol (DHCP)
    testing. They are also capable of packet captures. The devices ship with a full-color
    touch screen for analysis and reporting purposes.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个选择是查看 Fluke Networks 制造的设备，但这些设备通常会花费数千英镑。它们是非常酷的设备，如果与大型企业网络一起使用，非常有用，但在渗透测试或社会工程业务中很难证明其必要性。这些设备将执行从物理连接测试到动态主机配置协议（DHCP）测试的所有操作。它们还能够进行数据包捕获。这些设备配备有全彩触摸屏，用于分析和报告目的。
- en: What about using a Raspberry Pi with an LCD screen to display network status
    and IP Address details? The use of the RaspberryPi is covered in the dropbox section
    within this chapter, as well as touching upon the Adafruit LCD Plate, which would
    display the IP address.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Raspberry Pi 和 LCD 屏幕显示网络状态和 IP 地址详情如何？Raspberry Pi 的使用在本章的 Dropbox 部分中有所涉及，还涉及到
    Adafruit LCD Plate，它将显示 IP 地址。
- en: The most realistic option is to use a netbook, which can double as a penetration-testing
    hacktop.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 最现实的选择是使用网络本，它可以兼作渗透测试黑客本。
- en: Netbooks
  id: totrans-60
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 网络本
- en: Netbooks are low-cost laptops that are both small and reasonably powerful. These
    can be picked up for less than $250 with dual core CPUs and enough RAM to run
    Kali or similar Linux distributions. For example, a cursory search of a popular
    online shopping retail outlet had a number of new and used netbooks, including
    the lower end availability being a brand new WolVol BLACK 10″ laptop with WiFi
    and camera (Android 4.2, dual core processor, 8 GB HD) for a mere $149.94\. An
    extended battery will provide 6–8 h of life, making them absolutely ideal companions
    for any social engineer.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 网络本是价格低廉的笔记本电脑，既小巧又相当强大。可以用不到250美元的价格购买到具有双核 CPU 和足够运行 Kali 或类似 Linux 发行版的 RAM
    的网络本。例如，对一个热门的在线购物零售商进行了一个粗略的搜索，包括较低端的选项是一款全新的 WolVol BLACK 10 英寸带 WiFi 和摄像头的笔记本电脑（Android
    4.2，双核处理器，8 GB 硬盘）仅售149.94美元。延长电池可以提供6-8小时的使用时间，使它们成为任何社会工程师的绝佳伴侣。
- en: However, the author’s have a handful of higher specification Asus EEE-PCs of
    various shapes and sizes that are used in such engagements.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，作者手头有几台更高规格的 Asus EEE-PCs，各种形状和尺寸不一，用于这类工作。
- en: Because of their size, they are easily secreted about the person, in either
    a large pocket or a briefcase. They are also easily hidden within the corporate
    environment and used as a dropbox.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 由于它们的尺寸，它们很容易藏在人身上，无论是在大口袋还是公文包里。它们也很容易隐藏在公司环境中，并用作 Dropbox。
- en: For the cost and benefit they should be considered essential items in the toolkit.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 就成本和效益而言，它们应该被视为工具包中的基本物品。
- en: What subnet am I in?
  id: totrans-65
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 我在哪个子网？
- en: DHCP is heavily relied upon in many networked environments, especially for client
    access, but what if DHCP is not available? How can information on the local subnet
    and the hosts in it be gathered?
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多网络环境中，特别是用于客户端访问的地方，DHCP是非常依赖的，但是如果DHCP不可用怎么办？如何收集关于本地子网和其中的主机的信息？
- en: Simply put, by running packet sniffing software to figure out who is talking
    out there. Wireshark, TShark, or TCPDUMP are the tools of choice. Obviously, because
    there is no IP address, there won’t be sight of any unicast IP traffic, but broadcasts
    will be seen, such as Address Resolution Protocol (ARP) traffic. This can be an
    instant giveaway as to the local IP address range and can often indicate the default
    gateway too. The default gateway will almost always be the first or last address
    in a given subnet, for example.1 or.254.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 简单来说，通过运行数据包嗅探软件来找出谁在那里交流。Wireshark、TShark或TCPDUMP是首选工具。显然，因为没有IP地址，就不会看到任何单播IP流量，但会看到广播，比如地址解析协议（ARP）流量。这可以立即显示出本地IP地址范围，并且通常可以指示默认网关。默认网关几乎总是给定子网中的第一个或最后一个地址，例如1或.254。
- en: Cisco Discovery Protocol (CDP) can also be leveraged to provide useful information.
    The CDP packet will contain IP addresses and Virtual Local Area Network (VLAN)
    tags that can both be used when connecting to networks or spoofing packets.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 思科发现协议（CDP）也可以用来提供有用的信息。CDP数据包将包含IP地址和虚拟局域网（VLAN）标记，这两者都可以在连接到网络或欺骗数据包时使用。
- en: Don’t forget to look for Dynamic Trunking Protocol (DTP) packets while connected.
    It may be possible to establish a trunk to the switch and be placed in the VLAN
    of choice. Tools like Yersinia can be useful in these scenarios.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 连接时不要忘记查找动态干线协议（DTP）数据包。可能可以建立到交换机的干线并放置在所选的VLAN中。在这些情况下，工具如Yersinia可能会很有用。
- en: There is always the risk of assigning an IP that belongs to another host, so
    bear this in mind when testing.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 总是存在将IP分配给另一个主机的风险，所以在测试时请记住这一点。
- en: Port Security
  id: totrans-71
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 端口安全
- en: Port Security and 802.1x are mechanisms for protecting against rogue devices
    in switched networks. Through various means they control which physical devices
    can connect, what they get access to, and how they have to be configured to get
    access. Simple solutions rely on MAC address filtering, while more complex solutions
    install software agents and measure a system’s security posture before allowing
    it onto the network. Authentication can also be handled using a combination of
    certificates as well as user authentication.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 端口安全和802.1x是用于保护交换网络中的恶意设备的机制。通过各种方式，它们控制哪些物理设备可以连接，它们可以访问什么，以及它们必须如何配置才能获得访问权限。简单的解决方案依赖于MAC地址过滤，而更复杂的解决方案则安装软件代理，并在允许其进入网络之前测量系统的安全状况。认证也可以使用证书和用户认证的组合来处理。
- en: But what about devices that can’t have an agent or certificate installed on
    them? How are they authenticated in such environments? Sadly, the answer is usually
    by their MAC address. What that means to us is that all we need is the MAC address
    of a trusted device. Look around for a VoIP phone, printer, or thin client as
    all of these are commonly added to the MAC Address Bypass (MAB) list. Each of
    these device types commonly has the MAC address printed on a sticker somewhere
    on the device.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 但是对于无法安装代理或证书的设备怎么办？在这种环境下如何进行身份验证？遗憾的是，通常的答案是通过它们的MAC地址。对我们来说，这意味着我们只需要一个受信任设备的MAC地址。四处寻找VoIP电话、打印机或瘦客户端，因为这些设备通常被添加到MAC地址绕过（MAB）列表中。这些设备类型通常在设备的某个地方有MAC地址印刷在贴纸上。
- en: 'Spoofing the MAC address is simple. In Kali, we would issue the following command:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 欺骗MAC地址很简单。在Kali中，我们会发出以下命令：
- en: '[PRE0]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This command should work for most Linux distributions.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令应该适用于大多数Linux发行版。
- en: 'On OSX, do this:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在OSX上，执行以下操作：
- en: '[PRE5]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Simple as that!
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这么简单！
- en: In Windows operating systems applications can be downloaded, such as Etherchange—[http://ntsecurity.nu/toolbox/etherchange/](http://ntsecurity.nu/toolbox/etherchange/).
    It is also possible to change the MAC address within the registry.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows操作系统中，可以下载应用程序，如Etherchange—[http://ntsecurity.nu/toolbox/etherchange/](http://ntsecurity.nu/toolbox/etherchange/)。也可以在注册表中更改MAC地址。
- en: Attaching to the network remotely
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 远程连接到网络
- en: The nature of social engineering often means that there won’t be time to sit
    there and hack away, or even spend much time on the site at all. It is likely
    there will be multiple objectives and this work will need to be divided between
    on-site team members and those who are back in the office or outside of the building.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 社会工程的本质通常意味着没有时间坐在那里破解，甚至根本没有时间在网站上花费太多时间。很可能会有多个目标，这项工作需要在现场团队成员和办公室内或建筑外的人员之间分工合作。
- en: This is where remote connectivity plays a big part in the testing, but how can
    this be achieved? The short answer is by deploying a “dropbox.” A dropbox is a
    device that plugs into the network to provide team members with access into the
    target scope. There is an array of options available for this task. The simplest
    is to drop a wireless access point somewhere within the building and connect it
    into the corporate LAN. This isn’t always practical for various reasons so a more
    advanced solution such as a fully functioning PC or router may be required. Let’s
    take a look at each option.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是远程连接在测试中发挥重要作用的地方，但如何实现呢？简短的答案是部署一个“dropbox”。 Dropbox 是一个插入网络的设备，为团队成员提供进入目标范围的访问权限。有多种选项可供选择。最简单的方法是在建筑物内的某个地方放置一个无线接入点，并将其连接到公司
    LAN。由于各种原因，这并不总是切实可行，因此可能需要更高级的解决方案，例如一个完全功能的个人电脑或路由器。让我们看看每个选项。
- en: The dropbox
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Dropbox
- en: The dropbox will typically be a fully functional computer that can be plugged
    into a network and left behind. This is useful because the system could have a
    full suite of reconnaissance and hacking tools on board and ready to use. On top
    of this, there are a multitude of different hardware platforms and operating systems
    that could be chosen to implement, depending on the requirements and budget. Before
    moving onto these options, let’s take a look at some of the challenges when deploying
    a dropbox. Hopefully, this will help steer us towards a better solution.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: Dropbox 通常是一个完全功能的计算机，可以插入网络并留在后面。这很有用，因为系统可能已经准备好使用一套完整的侦察和黑客工具。此外，根据需求和预算，可以选择多种不同的硬件平台和操作系统来实现。在转向这些选项之前，让我们看看部署
    dropbox 时可能遇到的一些挑战。希望这能帮助我们找到更好的解决方案。
- en: Dropbox challenges
  id: totrans-90
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Dropbox 挑战
- en: Imagine being on the inside of a building, without authorization, and with a
    need to plug and run, what is likely to get in the way? Some of these challenges
    were hinted at when talking about live ports, and no DHCP addresses, earlier in
    the chapter.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，没有授权进入建筑内部，需要插上设备并快速操作，可能会遇到什么障碍？在本章前面提到的活动端口和没有 DHCP 地址时，已经暗示了一些挑战。
- en: First of all, the dropbox needs to be reasonably small, enabling it to be hidden
    away under a floor panel somewhere or in a cable tidy basket. It needs to be able
    to run a Linux distribution of some description and be usable at that. It is also
    vital that once it has been plugged in, that it is clear that the port it’s connected
    to is live. Indicator lights on the device is a good start, but a screen showing
    that the device has picked up an IP address is also useful. Connectivity on the
    device is a requirement too. There might be a need to add a USB wireless adapter
    for packet injection, or a 3G dongle for remote control. It will obviously need
    a wired network port.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，dropbox 需要相当小，可以隐藏在地板板块下或电缆整理篮中。它需要能够运行某种 Linux 发行版并且可用。一旦插入，清楚地显示它连接的端口是活动的至关重要。设备上的指示灯是一个好的开始，但显示设备已获取
    IP 地址的屏幕也很有用。设备上的连接性也是一个要求。可能需要添加 USB 无线适配器进行数据包注入，或者添加 3G 万能钥匙进行远程控制。它显然需要一个有线网络端口。
- en: The device doesn’t need to be blazing fast either, as there are plenty of lightweight
    Linux distributions available. Obviously though, the more power we have the better,
    it just needs to be tempered by the small size requirement.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 设备也不需要运行得非常快，因为有很多轻量级的 Linux 发行版可用。当然，拥有更多的功率会更好，只是需要考虑到小尺寸的要求。
- en: The system in question would also need to be able to boot reasonably quickly.
    After all, spending a lot of time waiting for the device to come online should
    be avoided. The chances are that there will be a limited window to perform the
    task and so as not to get caught in the act.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 所涉及的系统还需要能够相对快速地启动。毕竟，等待设备上线的时间应该尽量避免。很可能只有有限的时间窗口来执行任务，以免被抓住现行。
- en: 'So to sum up, the requirements are:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，需求如下：
- en: • Reasonably small
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: • 相当小
- en: • Screen to show IP address
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: • 屏幕显示IP地址
- en: • Indicator lights for network connection and activity
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: • 指示灯显示网络连接和活动
- en: • Boot in around a minute
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: • 大约一分钟启动
- en: • Connectivity—USB, wired network
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: • 连接性——USB，有线网络
- en: There are plenty of options available that meet some or all of the above requirements.
    Some are stronger in certain ways but suffer in others. For example, a very powerful
    machine would probably not meet the size requirements, although as will be discussed
    shortly, there are some small and powerful options available. The key word here
    is always going to be “compromise.” If the desire is for something small and cheap,
    it certainly won’t be powerful too.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多选项可供选择，可以满足上述部分或全部要求。有些在某些方面更强大，但在其他方面可能会受到影响。例如，一台非常强大的机器可能不符合尺寸要求，尽管如稍后将讨论的那样，也有一些小而强大的选择。关键词始终是“妥协”。如果希望得到小而便宜的东西，那肯定不会太强大。
- en: It probably won’t surprise you to hear that there is already a commercial option
    that is available in this field.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 听到这个领域已经有商业选择可用可能不会让你感到惊讶。
- en: Pwnie Express
  id: totrans-103
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Pwnie Express
- en: The guys over at [http://pwnieexpress.com](http://pwnieexpress.com) have been
    making penetration test dropboxes for some time. It all started with the PwnPlug,
    which is basically a mains power plug with a tiny computer built in. These devices
    are pretty easily hidden in a busy office environment. Given that power sockets
    are often near network sockets it is certainly a good form factor for a covert
    device. Pwnie Express makes several variations of these devices, including the
    “PowerPwn” which is a fully functional eight-way power supply. These products
    include a Linux distribution with penetration-testing tools built in, as well
    as cool functionality such as 3G/4G adapter so that you can dial home.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://pwnieexpress.com](http://pwnieexpress.com)的人们已经开始制作渗透测试的投放盒有一段时间了。一切都始于PwnPlug，它基本上是一个内置微型计算机的电源插头。在繁忙的办公环境中，这些设备相当容易隐藏。鉴于电源插座通常靠近网络插座，这无疑是一种隐蔽设备的好形态。Pwnie
    Express制作了几种这些设备的变体，包括“PowerPwn”，这是一个完全功能的八路电源供应器。这些产品包括一个内置渗透测试工具的Linux发行版，以及诸如3G/4G适配器之类的酷功能，这样你就可以拨号回家。'
- en: The only drawback to these products, especially for the hobbyists out there,
    is the cost. The “PwnPlug Elite” is $995 and the “PowerPwn” sits at $1495\. These
    devices are aimed more at organizations that perform this kind of work on a weekly
    basis and therefore would offer good value for money.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这些产品唯一的缺点，尤其是对于那些业余爱好者来说，就是成本。 “PwnPlug Elite”售价为$995，而“PowerPwn”售价为$1495。这些设备更适合每周执行这种工作的组织，因此可以提供物有所值。
- en: So what self-build options are out there if this was the preferred choice?
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这是首选的选择，那么自建选项有哪些呢？
- en: RaspberryPi
  id: totrans-107
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 树莓派
- en: Anyone who hasn’t come across the RaspberryPi already, have most likely have
    been living in a cave for the last few years. The RaspberryPi has seen incredible
    uptake since its announcement and has been the subject of intense media coverage.
    All of this is for good reason, of course, the RaspberryPi is a really cool piece
    of equipment.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如果还没有听说过树莓派的人，很可能在过去几年里一直生活在洞穴里。自从宣布以来，树莓派的普及率就非常高，并且一直受到密集的媒体报道。当然，所有这些都是有充分理由的，因为树莓派确实是一件非常酷的设备。
- en: Basically, the Pi is a credit card-sized computer, packing either 256 or 512 MB
    of RAM, an 800 MHz ARM CPU, wired network, and USB. All of this for the princely
    sum of around $25\. It was developed as an extremely low-cost computer to help
    get kids back into programming, but has seen massive uptake in the modding and
    hacking community too. There are wide-ranging projects out there from automated
    bird feeders to home automation systems. The Pi’s exceptionally low power consumption
    means that it can also run from battery packs for extended periods of time.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，树莓派是一台信用卡大小的计算机，配备了256或512MB的RAM，800MHz的ARM CPU，有线网络和USB。所有这些只需约$25。它是作为一台极低成本的计算机开发的，以帮助孩子们重新开始编程，但在改装和黑客社区中也得到了广泛应用。有各种各样的项目，从自动化喂鸟器到家庭自动化系统。Pi的极低功耗意味着它也可以长时间地运行于电池组。
- en: How does the Pi fit the requirements? Well, it certainly ticks the box for size,
    at a diminutive 85.60 mm×56 mm×21 mm and weighing only 45 g it’s hard to argue
    against this point. The SD card it will use for the operating system will stick
    out a little beyond those dimensions, however.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派如何满足需求？嗯，它肯定符合体积要求，在迷你的 85.60 毫米 × 56 毫米 × 21 毫米，重量仅为 45 克的情况下，很难反对这一点。然而，用于操作系统的
    SD 卡会略微突出这些尺寸。
- en: It doesn’t ship with a screen, but there are a few LCD options available that
    can be built into the Pi. Some are USB controlled and powered, some plug straight
    into the headers on the Pi itself. In either case, displaying the IP address is
    certainly achievable. An alternative option is to use one of the tiny color TFT
    screens used for reversing systems built for cars. All of this can be picked up
    on eBay and [http://www.adafruit.com](http://www.adafruit.com). The use of an
    Adafruit LCD will be covered later in the chapter.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 它没有配备屏幕，但有几个 LCD 选项可供选择，可以集成到树莓派中。有些是由 USB 控制和供电的，有些直接插入树莓派的引脚。无论哪种情况，都可以显示
    IP 地址。另一个选择是使用用于汽车倒车系统的微型彩色 TFT 屏幕之一。所有这些都可以在 eBay 和 [http://www.adafruit.com](http://www.adafruit.com)
    上购买。在本章后面将介绍如何使用 Adafruit LCD。
- en: The Pi also has indicator lights for power, disk activity, network link, duplex,
    and speed, providing information that it has connected to a live port. Boot times
    with most operating systems are certainly around the minute mark too. A good Raspbian
    build starts responding to pings in around 30 s, and will accept Secure Shell
    (SSH) connections in around 35 or so.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派还具有电源、磁盘活动、网络连接、双工和速度的指示灯，提供了连接到活动端口的信息。大多数操作系统的启动时间肯定在一分钟左右。一个良好的 Raspbian
    版本在约 30 秒内开始响应 ping 命令，并在约 35 秒左右接受安全外壳（SSH）连接。
- en: The Pi’s popularity means it also has support from a lot of the major Linux
    distributions, many of which offer Pi-specific images. Better yet, Kali Linux—[www.kali.org](http://www.kali.org)—also
    offer a Pi image, which works very nicely as well. The image is larger than most
    Pi distributions and will require an 8 GB SD card, but these are not expensive.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派的普及意味着它也得到了许多主流 Linux 发行版的支持，其中许多提供了专为树莓派设计的镜像。更好的是，Kali Linux—[www.kali.org](http://www.kali.org)—也提供了一个适用于树莓派的镜像，它也非常好用。该镜像比大多数树莓派发行版大，并且需要一个
    8 GB 的 SD 卡，但这些都不贵。
- en: The only thing of note is that the Pi only has 512 MB of RAM, so there are tight
    working constraints here. It’s not going to set any speed records, let’s put it
    that way, but it is more than usable for most tasks ([Figure 12.1](#F0010)).
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，树莓派只有 512 MB 的 RAM，因此在这里工作的约束条件很严格。它不会刷新任何速度记录，这么说吧，但对于大多数任务来说，它还是可以使用的（参见图
    12.1）。
- en: '![image](../images/F000120f12-01-9780124201248.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/F000120f12-01-9780124201248.jpg)'
- en: Figure 12.1 The RaspberryPi.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.1 树莓派。
- en: Intel NUC
  id: totrans-117
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 英特尔 NUC
- en: If power is the priority, then the Intel NUC is the “stand-out” piece of tech,
    at the moment. Not only is the NUC small, but the latest version packs an Intel
    Core i5 CPU. The NUC is bought as a barebones device, into which memory, Solid
    State Storage (SSD), and a wireless card can be installed. It also has physical
    network ports on board. As much as 16 GB of RAM can be installed inside these
    tiny computers, meaning that they absolutely fly for this kind of application.
    It was no joke, either, when they are described as being small; sitting at 4″×4″×2″
    they are certainly easy to hide away in places where they are unlikely to be found.
    They also have another useful attribute as a dropbox, they come with a VESA compatible
    mount. This means they can be mounted to the back of a monitor at a hot desk and
    they are likely to go unnoticed for extended periods of time, especially if the
    LED power light is masked with isolation tape.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如果优先考虑性能，那么目前英特尔 NUC 就是“突出表现”的科技产品。NUC 不仅体积小，而且最新版本搭载了英特尔 Core i5 处理器。NUC 是一种裸机设备，可以安装内存、固态存储（SSD）和无线网卡。它还具有物理网络端口。这些微型计算机内部最多可以安装
    16 GB 的 RAM，这意味着它们在这种应用中绝对速度飞快。当说它们小不是在开玩笑；它们的尺寸是 4 英寸 × 4 英寸 × 2 英寸，肯定很容易藏在不易发现的地方。它们还有另一个有用的属性，即作为投递箱，它们配备了与
    VESA 兼容的支架。这意味着它们可以安装在热座位的显示器背面，而且在很长一段时间内可能不会被注意到，尤其是如果 LED 电源指示灯被隔离胶带遮挡的话。
- en: Because they run mSATA SSDs instead of mechanical disks, these little computers
    boot in seconds.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 因为它们使用 mSATA SSD 而不是机械硬盘，这些小型计算机的启动速度仅为几秒钟。
- en: For all this power some sacrifices must be made though. It is bigger than the
    Pi for example, and probably won’t be running for extended periods on a battery
    if required. It also doesn’t come with a screen or any easy way to build one into
    the case. However, this could be managed with the use of an external monitor or
    a remote colleague providing information as to when it has established the required
    connections. It is also not a cheap way to go about the task, although an Intel
    Celeron version is available at a lower price point. It certainly does tick all
    other boxes though, and from a speed and flexibility point of view the Pi just
    can’t touch it.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管需要做出一些牺牲，但这种性能是必须的。例如，它比树莓派要大，如果需要的话可能无法长时间运行在电池上。它也没有屏幕或任何轻松地内置到机箱中的方法。然而，可以通过使用外部显示器或远程同事提供信息来管理这一点，以确定何时建立所需的连接。这也不是一种廉价的方式来完成任务，尽管有一个更便宜的英特尔赛扬版本可供选择。但从速度和灵活性的角度来看，树莓派确实无法与其相提并论。
- en: The NUC motherboards are available to buy as a stand-alone item and could be
    built into a customized case with a screen. The standard NUC barebones case doesn’t
    really have any spare room for gadgets ([Figure 12.2](#F0015)).
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: NUC主板可以作为独立项目购买，并可以内置到带有屏幕的定制机箱中。标准NUC裸机机箱实际上没有多余的空间放置小工具（[图12.2](#F0015)）。
- en: '![image](../images/F000120f12-02-9780124201248.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/F000120f12-02-9780124201248.jpg)'
- en: Figure 12.2 The Intel Nuc.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.2 英特尔Nuc。
- en: Also rans
  id: totrans-124
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 亚军
- en: If the device has to be even smaller than the Pi, there are some other options
    out there. First of all, the Android-based Mini PC, the MK802 type devices are
    a reasonable option. They are a little larger than USB memory sticks and pack
    a quad core ARM processor and 2 GB of RAM! They are certainly little powerhouses.
    It should be possible to get one of the ARM branches of Kali running on the system.
    They are also pretty cheap, currently around £60\. Of course though, their tiny
    dimensions mean some limitations apply. There is no chance of a screen being built
    into the case, for example, and they do not have wired Ethernet. A USB to Ethernet
    dongle would solve the issue, but this will add to the size of the device with
    each new toy. It would still end up being a powerful and small “dropbox” though.
    Because the device plugs straight into a monitor there could be room for an alternative
    dropbox mode. How about faking an application to capture credentials? When a user
    turns on the monitor, they get what looks like their domain logon screen, but
    it is actually the “dropbox.” However, the consultant would need to be close by
    to be able to pick it up quickly, because the first IT guy that came and looked
    at the problem would likely smell a rat and take it away.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 如果设备必须比树莓派更小，那么还有其他选择。首先，基于Android的迷你PC，如MK802类型的设备是一个合理的选择。它们比USB存储设备稍大，搭载四核ARM处理器和2GB的RAM！它们确实是小巨人。应该可以在系统上运行Kali的ARM分支之一。它们也相当便宜，目前约60英镑。当然，它们的微小尺寸意味着一些限制。例如，机箱内不可能内置屏幕，它们也没有有线以太网。一个USB转以太网的转接器可以解决问题，但这会随着每个新玩具的增加而增加设备的尺寸。尽管如此，它仍然会成为一个功能强大且小巧的“dropbox”。因为设备直接插入显示器，可能会有替代的dropbox模式。假设伪造一个应用程序来捕获凭据？当用户打开显示器时，他们看到的是他们的域登录画面，但实际上是“dropbox”。然而，顾问需要靠近才能迅速捡起它，因为第一个查看问题的IT人员很可能会察觉到问题并将其带走。
- en: Another device on the horizon is the CuBox—[http://cubox-i.com](http://cubox-i.com).
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 另一款即将推出的设备是CuBox—[http://cubox-i.com](http://cubox-i.com)。
- en: These tiny devices are very much in the mold of the Pi but will run quad core
    CPUs and have 2 GB of RAM. Again, these devices are ARM CPU based, so will run
    most of the Linux distributions out there with a little hacking. They measure
    2″×2″×2″ and come complete with Gigabit Ethernet. Again, any peripherals or screens
    will not fit into the case, so they would have to be external. Alternatively a
    custom case could be 3D printed. The CuBox is also very cost-effective, meaning
    several could be available, without breaking the bank.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 这些微型设备在很大程度上符合树莓派的模式，但将运行四核CPU并拥有2GB的RAM。同样，这些设备基于ARM CPU，因此可以通过一些小小的修改来运行大多数Linux发行版。它们的尺寸为2英寸×2英寸×2英寸，并配备千兆以太网。同样，任何外设或屏幕都无法放入机箱内，因此它们必须是外部的。或者可以定制一个3D打印的机箱。CuBox也非常具有成本效益，意味着可以提供多个设备，而不会让银行破产。
- en: Building your own “dropbox”
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建自己的“dropbox”
- en: In this section, the process of creating a “dropbox,” using a 512 MB RaspberryPi
    will be explained. For the purposes of this example, this will be with the use
    of Raspbian Linux, but any of the ARM distributions can be chosen for the build.
    The original intention was to use Kali Linux, but at the time of writing there
    wasn’t any I2C support, out of the box. The I2C drivers and tools are used to
    control an LCD, which can be used to display useful system information. As an
    example, it could be used to display the IP address it has received via DHCP.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在本部分中，将解释使用512 MB的RaspberryPi创建“dropbox”的过程。在此示例中，将使用Raspbian Linux，但可以选择任何ARM发行版进行构建。最初的打算是使用Kali
    Linux，但在撰写本文时，没有任何I2C支持。 I2C驱动程序和工具用于控制LCD，该LCD可用于显示有用的系统信息。例如，它可以用于显示通过DHCP接收到的IP地址。
- en: 'What will be needed:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 将需要什么：
- en: • A RaspberryPi—Preferably the 512 MB version
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: • 一个RaspberryPi—最好是512 MB版本
- en: • An SD card—At least 8 GB, and preferably a nice fast one too (i.e., a Sandisk
    Extreme 45 MB/S card)
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: • 一张SD卡—至少8 GB，最好是速度较快的一张（例如，SanDisk Extreme 45 MB/S卡）
- en: • A power supply—The Pi is powered by a USB “On The Go” cable
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: • 一个电源供应—Pi由USB“On The Go”电缆供电
- en: • A computer to write the operating system to the SD card—A card reader will
    be required if there’s not one built in
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: • 用于将操作系统写入SD卡的计算机—如果没有内置的读卡器，则需要一个读卡器
- en: • The Raspbian image—[http://www.raspberrypi.org/downloads](http://www.raspberrypi.org/downloads)
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: • Raspbian映像—[http://www.raspberrypi.org/downloads](http://www.raspberrypi.org/downloads)
- en: • An imaging tool for SD cards. (i.e., the awesome RPi-SD card builder for MAC—[http://alltheware.wordpress.com/2012/12/11/easiest-way-sd-card-setup/](http://alltheware.wordpress.com/2012/12/11/easiest-way-sd-card-setup/))
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: • SD卡的映像工具。（例如，MAC上强大的RPi-SD卡生成器—[http://alltheware.wordpress.com/2012/12/11/easiest-way-sd-card-setup/](http://alltheware.wordpress.com/2012/12/11/easiest-way-sd-card-setup/)）
- en: Installing the operating system
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装操作系统
- en: For anyone that may never have worked with a RaspberryPi before, installing
    the operating system is certainly a little different to a standard PC. It’s not
    just a case of plugging in a USB stick and booting to the installer, in any case.
    The RaspberryPi uses the aforementioned SD card for the operating system, so tools
    are needed to extract the image onto the SD card, and ensure that it is bootable.
    There are plenty of tools available, which make this entire process completely
    painless, so don’t be afraid to go and buy a Pi and tinker around with it.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 对于从未使用过RaspberryPi的人来说，安装操作系统肯定与标准PC有所不同。无论如何，这并不仅仅是插入USB存储设备并引导到安装程序的情况。 RaspberryPi使用上述SD卡作为操作系统，因此需要工具将映像提取到SD卡上，并确保其可引导。有很多可用的工具，可以使整个过程完全无痛，因此不要害怕购买一个Pi并进行调试。
- en: Part 1—download the operating system
  id: totrans-139
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 第一部分—下载操作系统
- en: It is incredibly important to ensure that you get the correct image for the
    Pi. There have been component changes to the Pi as new revisions have been released
    which leave some older distributions un-bootable. An indication of this is that
    the red “Power” light will come on and the “Activity” light will flash once. The
    Pi will then do precisely nothing. At the time of writing the latest Raspbian
    image works perfectly, even with the newer Hynix memory that is shipping on recent
    RaspberryPi hardware.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 确保为Pi获取正确的映像非常重要。随着发布新版本的Pi而进行的组件更改导致一些旧发行版无法引导。这的一个指示是红色的“电源”灯将亮起，而“活动”灯将闪烁一次。然后Pi将什么也不做。撰写本文时，最新的Raspbian映像与最近的RaspberryPi硬件上运送的新Hynix存储器完美配合。
- en: Go to [http://www.raspberrypi.org/downloads](http://www.raspberrypi.org/downloads)
    and download the current Pi version of Raspbian. Raspbian is a lightweight version
    of Debian built specifically for the Pi.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 转到[http://www.raspberrypi.org/downloads](http://www.raspberrypi.org/downloads)并下载当前Pi版本的Raspbian。
    Raspbian是专为Pi构建的Debian的轻量级版本。
- en: Part 2—write the operating system to the card
  id: totrans-142
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 第二部分—将操作系统写入卡中
- en: As previously mentioned, the SD card will need to be imaged using either a dedicated
    application, or if command line inclined, “dd.” This process is largely very safe,
    but without due care and attention this could end up wiping the wrong disk. Measure
    twice and cut once is the methodology to follow in this case.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，SD卡将需要使用专用应用程序或者如果喜欢命令行，则使用“dd”进行映像。这个过程在很大程度上是非常安全的，但是如果不仔细注意，可能会擦除错误的磁盘。在这种情况下，要遵循的方法是量两次，切一次。
- en: 'On OSX, use RPi-SD card builder, the process is as follows:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在OSX上，使用RPi-SD卡生成器，步骤如下：
- en: '• Step 1: Launch RPi-SD Card builder. It will ask where the Raspbian.img file
    is. Select it and click Ok ([Figure 12.3](#F0020))'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: • 步骤 1：启动 RPi-SD 卡生成器。它会询问 Raspbian.img 文件在哪里。选择它，然后点击确定（[图 12.3](#F0020)）
- en: '• Step 2: Select “Continue” if the SD card is plugged in. If not, connect it
    before pressing continue. Ensure that OSX mounted the device first!'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: • 步骤 2：如果插入了 SD 卡，请选择“继续”。如果没有，请在按继续之前连接它。确保 OSX 首先挂载了设备！
- en: '• Step 3: Ensure that only one disk is selected in this window, and be certain
    that it is the SD card. The selected disk is about to be erased, before installing
    Raspbian.'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: • 步骤 3：确保此窗口中仅选择了一个磁盘，并确保它是 SD 卡。选择的磁盘即将被擦除，然后安装 Raspbian。
- en: To find out what the SD card is mounted as, press the Apple Menu Button>About
    This Mac>More Info>System Report>Card reader. The name will be next to the “BSD
    Name” value.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 要找出 SD 卡被挂载为何名称，请按苹果菜单按钮>关于此 Mac>更多信息>系统报告>读卡器。名称将在“BSD 名称”值旁边。
- en: '• Step 4: Enter the password for the system. It will then state not to eject
    the SD card until the success message has been received.'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: • 步骤 4：输入系统密码。然后它会声明在收到成功消息之前不要弹出 SD 卡。
- en: '• Step 5: Press Ok and the imaging process begins. A rotating cog will be seen,
    in the menu bar to indicate progress. Feel free to click on it for more details.'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: • 步骤 5：按下确定按钮，映像过程开始。在菜单栏中会看到一个旋转的齿轮，表示进度。随时单击它以获取更多详细信息。
- en: '• Step 6: Go and grab a coffee, because this bit may take a little while.'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: • 步骤 6：去喝杯咖啡吧，因为这可能需要一些时间。
- en: '• Step 7: A message appears stating that the process is complete, and to plug
    the SD card into the Pi. Success! a bootable Raspbian Linux system has been created!'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: • 步骤 7：出现一条消息，指示进程已完成，并将 SD 卡插入 Pi。成功！已创建一个可引导的 Raspbian Linux 系统！
- en: '![image](../images/F000120f12-03-9780124201248.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/F000120f12-03-9780124201248.jpg)'
- en: Figure 12.3 Selecting the Raspbian image.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.3 选择 Raspbian 镜像。
- en: There are alternative ways to image the SD card, for example, using the command
    line tool “dd” to achieve the same results. Using an application means less chance
    of accidentally destroying data, however.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 也有其他方法可以将 SD 卡映像，例如使用命令行工具“dd”来实现相同的结果。使用应用程序意味着更少意外破坏数据的机会。
- en: If using Windows, win32diskimager is a good option—[http://sourceforge.net/projects/win32diskimager/](http://sourceforge.net/projects/win32diskimager/).
    It’s simple enough; point it at the image, tell it where the SD card is, and wait
    for the job to complete.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用 Windows，win32diskimager 是一个不错的选择—[http://sourceforge.net/projects/win32diskimager/](http://sourceforge.net/projects/win32diskimager/)。这很简单；指向镜像，告诉它
    SD 卡在哪里，然后等待任务完成。
- en: Part 3—postinstallation tasks
  id: totrans-157
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 第三部分——安装后的任务
- en: There are one or two things that are required to finish things up. First of
    all, a full update of the operating system. Then install any custom tools, as
    required. It is also highly recommended that the default password be changed!
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一两件事情需要完成。首先，对操作系统进行完全更新。然后根据需要安装任何自定义工具。强烈建议更改默认密码！
- en: To log onto the Pi, enter the username “pi” and the password “raspberry.”
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 要登录 Pi，输入用户名“pi”和密码“raspberry”。
- en: 'Change the password:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 更改密码：
- en: '[PRE6]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Update the operating system:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 更新操作系统：
- en: '[PRE11]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This could take a while, especially if the connection is not particularly fast,
    it might be worthwhile going away and grabbing a coffee, as it could be a long
    wait!
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能需要一段时间，特别是如果连接不是特别快的话，不妨离开一会儿去喝杯咖啡，因为可能要等很长时间！
- en: It is possible to SSH onto the Pi for those who want to run in a headless (without
    a monitor) configuration. There may also be a need to expand the file system if
    an SD card, larger than 8 GB, is used. Raspbian will boot into a menu, allowing
    the partition size to be changed automatically, assuming that a keyboard and monitor
    is being used. If SSH has been used to remotely connect to the Pi, the script
    can be executed manually with sudo. /raspbpi-config ([Figure 12.4](#F0025)).
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 对于想要以无监视器的方式运行的用户，可以通过 SSH 登录 Pi。如果使用大于 8 GB 的 SD 卡，则可能需要扩展文件系统。Raspbian 将引导到一个菜单，允许自动更改分区大小，假设正在使用键盘和显示器。如果已经使用
    SSH 远程连接到 Pi，则可以手动执行脚本以使用 sudo。/ raspbpi-config（[图 12.4](#F0025)）。
- en: '![image](../images/F000120f12-04-9780124201248.jpg)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/F000120f12-04-9780124201248.jpg)'
- en: Figure 12.4 Up and running.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.4 运行中。
- en: Phoning home
  id: totrans-172
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 连接回家
- en: When the “dropbox” is left behind, it is important to ensure that it is possible
    to access it from a remote location. There are a number of ways to go about this,
    some better than others. The tried and tested way would be to create a reverse
    SSH tunnel. In other words, the Pi will create an SSH connection back to the data
    center, allowing any traffic to be routed over this session.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 当“dropbox”留在后面时，确保可以从远程位置访问它非常重要。有很多方法可以解决这个问题，有些方法比其他方法更好。一种经过验证的方法是创建一个反向
    SSH 隧道。换句话说，树莓派将创建一个 SSH 连接返回到数据中心，允许任何流量通过此会话路由。
- en: The reason why the Pi is made to dial out, is that dialing in simply will not
    work. Not only would any firewall or router block the inbound access, but there
    would not be any Network Address Translation in place for the “dropbox.”
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派被要求拨出的原因是，简单地拨入是行不通的。不仅任何防火墙或路由器都会阻止入站访问，而且“dropbox”也没有进行任何网络地址转换。
- en: An alternative option would be to look at using OpenVPN to provide the remote
    access. This would have distinct advantages over an SSH tunnel. An OpenVPN would
    allow all traffic to be routed across the Virtual Private Network (VPN). In these
    circumstances, it would be identical to plugging directly into the network. OpenVPN
    sends all of its traffic over Secure Sockets Layer (SSL), meaning it will just
    look like standard web traffic. This reduces the likelihood of being caught in
    the act by monitoring systems.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种选择是考虑使用 OpenVPN 提供远程访问。这相对于 SSH 隧道有着明显的优势。OpenVPN 允许所有流量通过虚拟私有网络（VPN）路由。在这些情况下，它将与直接连接到网络一样。OpenVPN
    将其所有流量发送到安全套接字层（SSL），这意味着它看起来就像标准的 Web 流量。这减少了被监视系统抓到的可能性。
- en: Let’s take a look at reverse SSH first of all. Setting up OpenVPN is covered
    later in the chapter.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 首先让我们来看一下反向 SSH。设置 OpenVPN 将在本章后面进行讨论。
- en: Configuring SSH tunnels
  id: totrans-177
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置 SSH 隧道
- en: In the real world, we would need a public facing server with SSH open. The Pi
    would connect to the server, allowing traffic to be sent down the established
    tunnel. For the purposes of the demo, an Ubuntu Server Virtual Machine will be
    employed, as the SSH server, but whichever distribution you choose can be used,
    as is felt fit.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在现实世界中，我们需要一个具有 SSH 开放端口的公共服务器。树莓派将连接到服务器，允许流量通过已建立的隧道发送。为了演示的目的，将使用一个 Ubuntu
    服务器虚拟机作为 SSH 服务器，但您可以选择任何适合的发行版。
- en: To start with, the client and server needs to be configured to accept connections
    without a static password. For this, certificate-based authentication is used.
    Don’t be put off though, it’s really very straightforward.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，需要配置客户端和服务器以接受不带静态密码的连接。为此，使用基于证书的身份验证。不过，请不要被吓到，这实际上非常简单。
- en: Setting up certificate-based authentication
  id: totrans-180
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 设置基于证书的身份验证
- en: 'Step 1: First of all, log onto the Pi and generate an Rivest Shamir and Adleman
    (RSA) key. Ensure that this is being run as root. This can be checked with the
    command “id.”'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 第 1 步：首先登录到树莓派并生成一个 Rivest Shamir and Adleman（RSA）密钥。确保以 root 用户身份运行此操作。可以使用命令“id”来检查这一点。
- en: '[PRE12]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Accept the default filename and do not configure a passphrase when prompted.
    This can be changed to fit with any organizational policies when deploying live
    devices.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 接受默认文件名，并在提示时不要配置密码短语。在部署实际设备时，这可以更改以符合任何组织政策。
- en: 'Step 2: Next, transfer the public key from the Pi to the server that will be
    accepting the SSH connections.'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 第 2 步：接下来，将公钥从树莓派传输到将接受 SSH 连接的服务器。
- en: '[PRE13]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Assuming that the password has been entered for the server, a success message
    should be received, indicating that the key has been added. This should now enable
    SSH between the Pi and the server, without you having to enter a password.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 假设为服务器输入了密码，则应收到一个成功消息，表示密钥已添加。现在应该能够在树莓派和服务器之间进行 SSH，而无需输入密码。
- en: '[PRE15]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Typically, that’s all that is needed to get it up and running with certificate
    authentication. If the connection fails, check the sshd_config which is in/ etc
    /ssh and have a look for the following values.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，这就是使用证书身份验证启动并运行所需的全部内容。如果连接失败，请检查位于`/etc/ssh`中的`sshd_config`，并查看以下值。
- en: '• PermitRootLogin: Should be set to “yes” if you want to use the root user'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: • PermitRootLogin：如果要使用根用户，则应将其设置为“yes”
- en: '• RSAAuthentication: Should be set to “yes”'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: • RSAAuthentication：应设置为“yes”
- en: '• PubkeyAuthentication: Should be set to “yes”'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: • PubkeyAuthentication：应设置为“yes”
- en: A default Ubuntu server-build worked fine after setting a password for the root
    account. Your mileage may vary! It’s always worth checking the logs in /var/log
    for any obvious issues. Additionally, a verbose SSH connection may be run from
    the pi with ssh -vvv root@myserver. This should aid any troubleshooting issues.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在为 root 账户设置密码后，一个默认的 Ubuntu 服务器构建在没有问题。结果可能会有所不同！检查 /var/log 中的日志以寻找任何明显的问题总是值得的。此外，可以从树莓派上运行一个详细的
    SSH 连接 ssh -vvv root@myserver。这应该有助于解决任何故障排除问题。
- en: Creating the SSH reverse tunnel
  id: totrans-208
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建 SSH 反向隧道
- en: So this is the cool bit. We are going to tell the Pi to connect back to our
    server, which in most cases will be in our data center. It will establish an SSH
    connection and tell the server to open up a new port, such as TCP/5555\. The server
    can then be logged in to establish an SSH connection to “localhost” on port 5555\.
    This will then be forwarded back down the already established tunnel to the Pi.
    This method bypasses any inbound access control, as the Pi has made an outbound
    connection. It is simply a case of piggybacking in on it. Admittedly, this concept
    can be confusing at first, so let’s configure it and see how straightforward it
    is.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是酷炫的部分。我们将告诉树莓派连接回我们的服务器，这在大多数情况下将在我们的数据中心中。它将建立一个 SSH 连接并告诉服务器打开一个新端口，例如
    TCP/5555。然后可以登录到服务器以在端口 5555 上建立到 “localhost” 的 SSH 连接。然后，这将通过已建立的隧道向下转发到树莓派。这种方法绕过了任何入站访问控制，因为树莓派建立了出站连接。这只是搭车而已。诚然，这个概念起初可能有点令人困惑，所以让我们配置它并看看它有多简单。
- en: Let’s start with the basic command, which is to be issued on the Pi.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从在树莓派上发出的基本命令开始。
- en: '[PRE30]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Let’s break this down a bit. We have created an SSH session from the Pi to the
    server 192.168.1.156 with the user root. It didn’t need a password as we have
    already set up certificate-based authentication. The -N command switch is “Do
    Not Execute A Remote Command,” because all we want to do is forward traffic. The
    -R option is telling the server to open or bind a new port, in this case 5555
    on localhost.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们稍微解释一下。我们已经从树莓派创建了一个到服务器 192.168.1.156 的 SSH 会话，使用的是 root 用户。由于我们已经设置了基于证书的身份验证，所以不需要密码。-N
    命令开关是“不执行远程命令”，因为我们只想转发流量。-R 选项告诉服务器打开或绑定一个新的端口，本例中为本地主机的 5555 端口。
- en: So what is the impact of this? Simply put, if we log into our server and SSH
    to localhost on port 5555 we should find out.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这有什么影响？简单来说，如果我们登录到我们的服务器并且 SSH 到本地主机的 5555 端口，我们应该可以找到答案。
- en: '[PRE31]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Success! All inbound access control has been subverted and we are now logged
    into a device on the inside! Of course, things aren’t always so easy in the real
    world, especially in high-security environments. Some obvious things to try would
    be configuring the server to listen for SSH connections on TCP/443, thus bypassing
    basic firewall features on the way out of the network.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 成功！所有入站访问控制都已被颠覆，我们现在已经登录到了内部的设备！当然，在现实世界中事情并不总是那么简单，尤其是在高安全性的环境中。一些尝试的明显方法包括配置服务器以侦听
    TCP/443 上的 SSH 连接，从而绕过网络出口的基本防火墙功能。
- en: Making it stick
  id: totrans-219
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 让它牢记于心
- en: Ok, so that’s covered the basics of getting the SSH session up and running,
    but this needs to be made more reliable. It’s not going to be possible to go back
    and restart a session when it crashes. The consultant might even be hundreds of
    miles away when it does!
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，现在我们已经涵盖了启动和运行 SSH 会话的基础知识，但是这需要变得更可靠。当会话崩溃时，重新启动是不可能的。当它崩溃时，顾问甚至可能距离数百英里之遥！
- en: 'There are a few options available to ensure that this doesn’t ruin the day.
    For example: “autossh.” Autossh will set up and monitor any SSH tunnels, restarting
    them as needed. This way, anywhere a little Trojan horse is plugged in, it will
    reassuringly dial home, enabling the completion of the test from a remote location.'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种选择可用以确保这不会毁掉一天。例如：“autossh”。Autossh 将设置并监视任何 SSH 隧道，并根据需要重新启动它们。这样，无论插入了一个小木马的地方，它都会安心地拨打回家，从而使测试能够从远程位置完成。
- en: Start by installing autossh on our Pi.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在我们的树莓派上安装 autossh。
- en: '[PRE35]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Next we need to test that autossh is working and get it to set up a tunnel.
    Let’s start by refreshing our memory on the earlier reverse SSH example, which
    hopefully you had working too!
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要测试 autossh 是否正常工作并让它建立一个隧道。让我们首先回顾一下之前的反向 SSH 示例，希望您也成功地让它工作了！
- en: '[PRE36]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Remember, this works without a password because we previously set up certificate-based
    authentication. Now let’s take a look at setting up an identical session but with
    autossh.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，这不需要密码，因为我们先前设置了基于证书的身份验证。现在让我们来看看如何设置一个相同的会话，但使用 autossh。
- en: '[PRE37]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: That’s all there is to it! What is happening here? Is that autossh is being
    instructed to monitor it’s SSH connection using port 13000\. Any port can be chosen
    for this task, it’s irrelevant to the functionality. Just choose a high port for
    the time being. The -f command switch runs autossh in the background. The rest
    of the command is a like-for-like copy of the original reverse SSH command. Surprisingly
    easy isn’t it? Let’s add a couple of extras in there for reliability.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样了！这里发生了什么？autossh被指示使用端口13000监视它的SSH连接。可以选择任何端口来执行此任务，对功能来说并不重要。暂时选择一个高端口。-f命令开关在后台运行autossh。其余的命令是对原始反向SSH命令的逐字复制。惊人地简单，不是吗？让我们为可靠性添加一些额外的内容。
- en: '[PRE38]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Ok, so there is one other task remaining, and that is to ensure that the tunnel
    is established at boot. After all, it is best to avoid configuring this thing
    during an engagement, isn’t it? The perfect approach is to be able to plug it
    in and walk away right?
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，还有一项任务要完成，那就是确保隧道在启动时建立。毕竟，在参与过程中最好避免配置这个东西，不是吗？最完美的方法是插上它然后离开，对吧？
- en: 'It is an almost certainty that each different person asked will have a different
    way to do this, so go with the one that suits best. For example: edit the /etc/rc.local
    file by adding the command before the “exit 0” line. The end of the file should
    look like this.'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎可以肯定，每个不同的人都会有不同的做法，所以选择最适合自己的。例如：编辑/etc/rc.local文件，在“exit 0”行之前添加命令。文件的末尾应该是这样的。
- en: '[PRE39]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[PRE41]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Now a device has been created that can plug into the target network. It will
    automatically bring a reverse SSH tunnel up at boot and monitor it for issues.
    It will rebuild any failed SSH tunnels too! But what is to be done if the device
    does not have outbound SSH access or if all outbound access is filtered by a proxy?
    How about adding 3G/4G support to this little box of tricks?
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 现在已经创建了一个可以插入目标网络的设备。它将在启动时自动建立一个反向SSH隧道，并监视是否有问题。它还会重新建立任何失败的SSH隧道！但是如果设备没有出站SSH访问权限，或者所有出站访问都被代理过滤了怎么办？怎么给这个小盒子添加3G/4G支持呢？
- en: Adding 3G/4G support
  id: totrans-236
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加3G/4G支持
- en: The risk when deploying a device of this type is that it won’t have unfiltered
    outbound access, and there won’t be sufficient time to troubleshoot why that is.
    In these cases, the only real option is to deploy a cellular data dongle with
    the “dropbox,” and have it call home so that the rest of the test can be conducted
    remotely. Of course, it is essential that these connections are handled reliably,
    which will be covered as well.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 部署这种类型的设备时的风险是它可能没有未经过滤的出站访问权限，也没有足够的时间来排查原因。在这种情况下，唯一的选择是部署一个带有“dropbox”的蜂窝数据设备，并让它自动连接到主机，以便其余的测试可以远程进行。当然，这些连接必须可靠处理，这也将被涵盖。
- en: Choosing a dongle
  id: totrans-238
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 选择设备
- en: 'This one can be a minefield, believe me! I am successfully using a Huawei E160
    USB stick type dongle and a Three UK SIM card. This combination seems to work
    reliably. A list of verified 3G dongles can be found at: [http://elinux.org/RPi_VerifiedPeripherals#USB_3G_Dongles](http://elinux.org/RPi_VerifiedPeripherals#USB_3G_Dongles).'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能是一个雷区，相信我！我成功地使用了一款华为E160 USB插头型号的设备和一张英国Three SIM卡。这种组合似乎很可靠。可以在以下链接找到经过验证的3G设备列表：[http://elinux.org/RPi_VerifiedPeripherals#USB_3G_Dongles](http://elinux.org/RPi_VerifiedPeripherals#USB_3G_Dongles)。
- en: One thing to pay special attention to is power usage. Running the Pi and a 3G
    dongle from a USB power source won’t always cut it so why not consider using a
    powered USB hub to ensure reliability.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 特别要注意的一点是功耗。从USB电源源运行树莓派和3G设备并不总是可行的，所以为什么不考虑使用带电源的USB集线器来确保可靠性呢。
- en: I would definitely recommend trying any you have lying around, you might just
    get lucky. If not, you can pick up E160s on eBay and Amazon for relatively little
    outlay. One of the nice things about the E160 is that it has a socket for external
    antennae. This can improve connection reliability in low signal areas.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 我绝对建议尝试一下你手头上有的设备，也许你会有好运。如果没有，你可以在eBay和亚马逊上以相对较少的费用购买E160。E160的一个好处是它有一个外部天线插孔。这可以提高在信号较弱区域的连接可靠性。
- en: Ensure that the dongle is unlocked for use with a SIM card of choice.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 确保插入的设备已解锁，可以使用所选的SIM卡。
- en: Setting up the cellular connection
  id: totrans-243
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 设置蜂窝连接
- en: 'Two applications are going to be used to get this rolling. The first is called
    “Sakis3g,” which is a Linux toolset for connecting to 3G networks. Sakis3g can
    be found at: [http://www.sakis3g.org](http://www.sakis3g.org). This site has been
    patchy at best of late, so alternative download locations for the software may
    need to be sought. Try the one at sourceforge [http://downloads.sourceforge.net/project/vim-n4n0/sakis3g.tar.gz](http://downloads.sourceforge.net/project/vim-n4n0/sakis3g.tar.gz)
    or by using the Way Back Machine [http://web.archive.org/web/*/http://www.sakis3g.org/](http://web.archive.org/web/*/http://www.sakis3g.org/).'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 两个应用程序将用于启动此过程。第一个称为“Sakis3g”，这是一个用于连接3G网络的Linux工具集。Sakis3g可以在以下网址找到：[http://www.sakis3g.org](http://www.sakis3g.org)。最近这个网站的稳定性一直不太好，因此可能需要寻找软件的替代下载位置。可以尝试在sourceforge上找到一个：[http://downloads.sourceforge.net/project/vim-n4n0/sakis3g.tar.gz](http://downloads.sourceforge.net/project/vim-n4n0/sakis3g.tar.gz)，或者使用Way
    Back Machine：[http://web.archive.org/web/*/http://www.sakis3g.org/](http://web.archive.org/web/*/http://www.sakis3g.org/)。
- en: We are also going to be using “umtskeeper”—[http://mintakaconciencia.net/squares/umtskeeper/](http://mintakaconciencia.net/squares/umtskeeper/).
    This application basically uses the Sakis3g script to make the actual connections,
    but then ensures they are reliable. Much like the autossh script, umtskeeper will
    restart the data connection as needed.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将使用“umtskeeper” — [http://mintakaconciencia.net/squares/umtskeeper/](http://mintakaconciencia.net/squares/umtskeeper/)。该应用程序基本上使用Sakis3g脚本进行实际连接，但确保它们是可靠的。就像autossh脚本一样，umtskeeper将根据需要重新启动数据连接。
- en: The first thing to do is check that a 3G connection can be achieved. Sakis3g
    can be used for this task. Sakis is a very simple-to-use application, it’s all
    menu driven so should be very straightforward to get going. All you need to do
    after extracting it is run sudo./sakis3g —interactive.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 首先要做的是检查是否可以实现3G连接。可以使用Sakis3g来执行此任务。Sakis是一个非常简单易用的应用程序，所有操作都是菜单驱动的，因此应该非常容易上手。提取后，您只需运行sudo./sakis3g
    —interactive。
- en: You will be presented with a menu as depicted in [Figure 12.5](#F0030).
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 将呈现一个如[F0030](#F0030)所示的菜单。
- en: '![image](../images/F000120f12-05-9780124201248.jpg)'
  id: totrans-248
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/F000120f12-05-9780124201248.jpg)'
- en: Figure 12.5 Sakis3G menu.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.5 Sakis3G菜单。
- en: Assuming that the hardware is compatible, and the SIM will work in the dongle,
    all that is really needed is to choose “Connect with 3G.” Very occasionally there
    maybe may need to choose option 2 “*Only Prepare Modem*....” Once that process
    has finished, it’s back to option 1 again. Sakis will confirm if the connection
    was successful. You can confirm this yourself by running ifconfig which should
    now show a ppp interface. Try pinging 8.8.8.8 (Google DNS) to confirm outbound
    access too.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 假设硬件兼容，并且SIM卡能在USB转接器上正常工作，那么真正需要的只是选择“Connect with 3G”。很少情况下可能需要选择选项2 “*Only
    Prepare Modem*...”。一旦该过程完成，再次选择选项1。Sakis会确认连接是否成功。您可以通过运行ifconfig来确认这一点，现在应该显示一个ppp接口。尝试ping
    8.8.8.8（Google DNS）以确认出站访问。
- en: Making it stick
  id: totrans-251
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 让它粘在一起
- en: Now it has been confirmed that the dongle, SIM, and Sakis are working correctly,
    let’s configure “umtskeeper” to look after things. This will be slightly more
    complicated than just using Sakis alone, but at least it will alleviate the need
    to keep returning so as to build the connection again.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 现在已确认USB转接器、SIM卡和Sakis正常工作，让我们配置“umtskeeper”来管理这些事务。这将比仅仅使用Sakis稍微复杂一些，但至少可以减少不断返回以重新建立连接的需要。
- en: First of all, after extracting “umtskeeper” on the Pi, copy the sakis3g executable
    into the same folder. This is so that “umtskeeper” knows where to find it easily.
    From here it’s a command line affair. Let’s take a look at the command that was
    used to get this working on the Three UK network.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在树莓派上提取“umtskeeper”后，将sakis3g可执行文件复制到相同的文件夹中。这样，“umtskeeper”就知道在哪里轻松找到它了。从这里开始就是一个命令行的事情。让我们看看在英国Three网络上使其工作的命令。
- en: '[PRE42]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'The Three UK network does not require an APN username or password, so each
    of these values is blank. It is essential that checks are made with the cellular
    data provider to confirm what each of the settings should be. The APN can be obtained
    from the cellular provider, which in this case was three.co.uk. The USBMODEM value
    can be found by running lsusb on the Pi with the dongle plugged in. Here is an
    example output:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: Three网络不需要APN用户名或密码，因此这些值都是空白的。必须与移动数据提供商进行检查，确认每个设置应该是什么。APN可以从移动数据提供商处获得，在这种情况下是three.co.uk。USBMODEM值可以通过在插入了转接器的树莓派上运行lsusb来找到。以下是一个示例输出：
- en: '[PRE43]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[PRE45]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[PRE47]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: As you can see, the ID value in the output is what we use in the USBMODEM value
    of our umtskeeper string. Let’s run the command and see what happens.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在输出中所看到的，ID值是我们在umtskeeper字符串的USBMODEM值中使用的值。让我们运行命令看看会发生什么。
- en: '[PRE48]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[PRE49]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[PRE50]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '[PRE53]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '[PRE54]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '[PRE55]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '[PRE56]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '[PRE57]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '[PRE58]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '[PRE59]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '[PRE60]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: '[PRE61]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '[PRE62]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '[PRE63]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: '[PRE64]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '[PRE65]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '[PRE66]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: '[PRE67]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: '[PRE68]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: '[PRE69]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '[PRE70]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: It worked! We now have a live 3G connection for our Pi to play with. At least
    I hope you do too. If it didn’t work, try and verify that your cellular provider
    settings are correct. There are plenty of help forums out there that should be
    able to point you in the right direction.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 成功了！我们现在有了一个供Pi使用的实时3G连接。至少我希望你也有。如果没有成功，请尝试验证您的移动运营商设置是否正确。有很多帮助论坛可以指导您找到正确的方向。
- en: So, is that it? Not quite. Now it is important to ensure that this connection
    comes up at boot and that it stays up. Again, by adding the command to the /etc/rc.local
    file so that the 3G connection launches at boot. Here is what I added.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，就这样了吗？还没有。现在很重要的是确保这个连接在启动时启动并保持连接。同样，通过将命令添加到/etc/rc.local文件中，使3G连接在启动时启动。这是我添加的内容。
- en: '[PRE71]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: It can take a little while to bring the interface up after booting, but it does
    work, and reliably too. This is evident, by having an LCD screen attached to the
    Pi that displays the IP address of both the eth0 interface as well as the ppp0/3G
    interface. This will be looked at in more detail later in the chapter when looking
    at other useful hardware.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动后，将界面启动需要一点时间，但它确实有效，而且非常可靠。这一点可以通过将LCD屏幕连接到显示Pi的eth0接口和ppp0/3G接口的IP地址的章节中得到更详细的解释。稍后在章节中还将更详细地查看其他有用的硬件。
- en: Here is a summary of what we have so far.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 这是到目前为止我们所拥有的概要。
- en: • A working “dropbox” running a current Linux distribution
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: • 运行当前Linux发行版的工作“dropbox”
- en: • Automatically brings up and maintains reverse SSH tunnels when it boots using
    certificate-based authentication
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: • 使用基于证书的身份验证，在启动时自动建立并维护反向SSH隧道
- en: • Automatically brings up and maintains a 3G data connection when it boots
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: • 在启动时自动建立并维护3G数据连接
- en: Now, the little dropbox can provide a hop off point into a customer network,
    let’s look at getting some useful tools installed to make it even better.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这个小的dropbox可以提供一个进入客户网络的跳转点，让我们看看如何安装一些有用的工具来使其变得更好。
- en: Installing useful tools
  id: totrans-294
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装有用的工具
- en: Choosing a toolset for the “dropbox” is definitely going to be down to personal
    preference; however, there are some common tools that most people will want to
    install. Each tool could be installed manually, as required, or perhaps consider
    taking a look at the excellent “Raspberry Pwn” project, which is maintained by
    the Pwnie Express guys.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 选择“dropbox”的工具集肯定是个人偏好的问题；然而，有一些常见的工具大多数人都会想要安装。每个工具都可以根据需要手动安装，或者考虑查看由Pwnie
    Express团队维护的优秀的“Raspberry Pwn”项目。
- en: The script will download and install many common penetration-testing tools,
    which provide a nice platform upon which to build.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本将下载并安装许多常见的渗透测试工具，为构建提供了一个良好的平台。
- en: 'The Raspberry Pwn files can be downloaded from: [https://github.com/pwnieexpress/Raspberry-Pwn](https://github.com/pwnieexpress/Raspberry-Pwn).
    Note that not all of the tools work with Raspbian, so there may be a need to tweak
    things here and there depending on specific requirements.'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: Raspberry Pwn文件可以从[https://github.com/pwnieexpress/Raspberry-Pwn](https://github.com/pwnieexpress/Raspberry-Pwn)下载。请注意，并非所有工具都与Raspbian兼容，因此根据具体要求可能需要进行一些调整。
- en: Installing Raspberry Pwn
  id: totrans-298
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 安装Raspberry Pwn
- en: Start by installing git on the Pi, then cloning the Pwnie Express files.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 首先在Pi上安装git，然后克隆Pwnie Express文件。
- en: '[PRE72]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: '[PRE73]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: '[PRE74]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: '[PRE75]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '[PRE76]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: '[PRE77]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: '[PRE78]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '[PRE79]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '[PRE80]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'Eventually, something like this message should be seen:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，应该会看到类似于此消息：
- en: '[PRE81]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '[PRE82]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: '[PRE83]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: '[PRE84]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: '[PRE85]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: '[PRE86]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: '[PRE87]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '[PRE88]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: '[PRE89]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: After rebooting the Pi, there should be a shiny new “pentest” directory brimming
    with tools to assist in any further endeavours ([Figure 12.6](#F0035))!
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 重启Pi后，应该会有一个崭新的“pentest”目录，其中装满了可帮助进一步努力的工具（[图12.6](#F0035)）！
- en: '![image](../images/F000120f12-06-9780124201248.jpg)'
  id: totrans-320
  prefs: []
  type: TYPE_IMG
  zh: '![图像](../images/F000120f12-06-9780124201248.jpg)'
- en: Figure 12.6 Raspberry Pwn pentest directory.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.6 Raspberry Pwn pentest目录。
- en: Screens, wireless, and other hardware
  id: totrans-322
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 屏幕、无线和其他硬件
- en: There are plenty of add-ons for the RaspberryPi that can make life a little
    easier for you, or expand the functionality of your dropbox. One of the things
    we discussed earlier was the ability to see at a glance that our dropbox was connected
    to the network. Obviously, the indicator lights on the Pi will tell us that it
    has a physical connection, and even what speed it has negotiated, but we need
    to know that it has an IP address too right? For this you could either go for
    one of the tiny color TFT type screens, or you could go down the path of a 16×2
    character LCD. If you go with the color screen, the IP address will be displayed
    at boot as this functionality is included in the /etc/rc.local startup script.
    I went with the 16×2 LCD for my particular needs.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多树莓派的附加组件可以让你的生活变得更轻松，或者扩展你的 Dropbox 的功能。我们之前讨论过的一件事是一目了然地看到我们的 Dropbox 是否连接到网络。显然，树莓派上的指示灯会告诉我们它是否有物理连接，甚至它协商了什么速度，但我们还需要知道它是否有
    IP 地址，对吧？为此，你可以选择一个小巧的彩色TFT屏幕，也可以选择一个16×2字符LCD的路径。如果你选择彩色屏幕，IP 地址将在启动时显示，因为此功能已包含在/etc/rc.local启动脚本中。我选择了16×2
    LCD来满足我的特定需求。
- en: Why not consider adding a wireless adapter to enable handshake captures or to
    act as a rogue access point. Additionally, the Pi will need a case, or several
    for that matter, to suit any given scenario.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么不考虑添加无线适配器以启用握手捕获或充当伪装接入点呢？此外，树莓派还需要一个外壳，或者说根据具体情况可能需要几个外壳来适应任何情景。
- en: The Adafruit Pi Plate—[http://www.adafruit.com/products/1110](http://www.adafruit.com/products/1110)
  id: totrans-325
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '[Adafruit Pi Plate](http://www.adafruit.com/products/1110)'
- en: While going into the ins and outs of soldering this kit together is way beyond
    the scope of the book, it’s worth having a brief look at how it works.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然深入了解如何将这个套件焊接在一起远远超出了本书的范围，但简要了解其工作原理还是值得的。
- en: 'The kit is basically a set of components that you will have to solder yourself.
    Don’t let this put you off though the process is really straightforward and suitable
    even for a beginner. You will need a reasonably steady hand, however! Adafruit
    has a step-by-step guide for the assembly of the Pi Plate here: [http://learn.adafruit.com/](http://learn.adafruit.com/)adafruit-16×2-character-lcd-plus-keypad-for-raspberry-pi/assembly.'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 该套件基本上是一组组件，你将自己进行焊接。但不要因此而却步，这个过程非常简单，即使是初学者也适用。但你需要一只相对稳定的手！Adafruit在这里为Pi板的组装提供了一步一步的指南：[http://learn.adafruit.com/](http://learn.adafruit.com/)adafruit-16×2-character-lcd-plus-keypad-for-raspberry-pi/assembly。
- en: What better way to introduce yourself to soldering? You can pick up reasonably
    cheap kits online which include all the necessary parts. I got one with a decent
    soldering iron, solder, stand, spare tip, solder sucker, and a set of helping
    hands. There is nothing better than building something like this and then seeing
    it outputting the information you choose to screen. Just to give you a final push
    on this, I had never soldered prior to building this plate, and managed just fine.
    Just take your time, read a few soldering guides and go slowly.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 还有什么比这更好的方式来介绍自己学习焊接呢？你可以在网上购买到价格合理的套件，其中包括所有必要的部件。我买了一个带有一把不错的焊接烙铁、焊锡、支架、备用烙铁头、吸锡器和一套辅助工具的套件。没有什么比制作这样的东西然后看到它输出你选择的信息更好的了。最后再给你一点鼓励，我以前从未焊接过，但组装这个板子却处理得很好。只要耐心点，多读几篇焊接指南，然后慢慢来。
- en: '[Figure 12.7](#F0040) shows the kit in its unassembled state.'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '[图12.7](#F0040) 显示了该套件的未组装状态。'
- en: '![image](../images/F000120f12-07-9780124201248.jpg)'
  id: totrans-330
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/F000120f12-07-9780124201248.jpg)'
- en: Figure 12.7 AdaFruit Pi Plate kit.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.7 AdaFruit树莓派板套件。
- en: Once assembled, the Pi Plate plugs into the General Purpose Input/Output (GPIO)
    headers on the motherboard itself. Because it is not soldered directly to the
    Pi, it can be removed for projects that don’t require the screen, for example,
    if you need to fit it into a smaller case ([Figure 12.8](#F0045)).
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 组装完成后，树莓派板将插入主板上的通用输入/输出（GPIO）引脚。因为它不是直接焊接到树莓派上的，所以它可以被拆卸，用于不需要显示屏的项目，例如，如果你需要将它安装到较小的外壳中
    ([Figure 12.8](#F0045)).
- en: '![image](../images/F000120f12-08-9780124201248.jpg)'
  id: totrans-333
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/F000120f12-08-9780124201248.jpg)'
- en: Figure 12.8 Assembled Pi and Pi Plate.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.8 组装好的树莓派和树莓派板。
- en: The hardware uses Python to control what is displayed. Adafruit supplies a lot
    of example scripts that can be adapted for many uses. For example, they supply
    an IP clock script, which unsurprisingly displays the IP address on one line,
    and the time on another. This script was modified to display the IP address of
    the Ethernet interface on one line, and the IP address of the 3G PPP interface
    on the other. That way, it is clear that when it is plugged in that it has a connection
    to both networks, enabling the consultant to walk away.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 硬件使用 Python 控制显示内容。Adafruit 提供了许多示例脚本，可以用于许多用途。例如，他们提供了一个 IP 时钟脚本，毫不奇怪地在一行上显示
    IP 地址，在另一行上显示时间。这个脚本被修改为在一行上显示以太网接口的 IP 地址，在另一行上显示 3G PPP 接口的 IP 地址。这样，很明显当插入时，它同时连接到两个网络，使得顾问可以离开。
- en: 'The code is included below:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是代码：
- en: '[PRE90]'
  id: totrans-337
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: '[PRE91]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '[PRE92]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: '[PRE93]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: '[PRE94]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: '[PRE95]'
  id: totrans-342
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: '[PRE96]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: '[PRE97]'
  id: totrans-344
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: '[PRE98]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: '[PRE99]'
  id: totrans-346
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: '[PRE100]'
  id: totrans-347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: '[PRE101]'
  id: totrans-348
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: '[PRE102]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: '[PRE103]'
  id: totrans-350
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: '[PRE104]'
  id: totrans-351
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: '[PRE105]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: '[PRE106]'
  id: totrans-353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: '[PRE107]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: '[PRE108]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: What should it look like when it’s running on our hardware is in [Figure 12.9](#F0050).
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 当它在我们的硬件上运行时，应该是什么样子在[图 12.9](#F0050)中。
- en: '![image](../images/F000120f12-09-9780124201248.jpg)'
  id: totrans-357
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/F000120f12-09-9780124201248.jpg)'
- en: Figure 12.9 Fully functional display showing IP addresses.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.9 完全功能显示显示 IP 地址。
- en: The display refreshes every second, as dictated by the line that reads sleep(1).
    You can change this to suit your needs. If you unplug the Ethernet interface,
    or the 3G dongle for that matter the display will stop showing the relevant IP
    address. It may take 10 s or so for it to catch up, however.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 显示每秒刷新一次，由代码行 sleep(1) 决定。您可以根据需要更改此设置。如果拔掉以太网接口，或者无线 3G 接收器，显示将停止显示相关的 IP 地址。可能需要
    10 秒左右才能追赶上来。
- en: As you can see from the script, you could pass any command line string and display
    the results. You are limited only by your imagination on this front.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 如您从脚本中所见，您可以传递任何命令行字符串并显示结果。在这方面，您只受限于您的想象力。
- en: There are several projects out there that relate to the use of these displays
    that are far more advanced than my simple hack job. I recommend looking at the
    “RoguePi” project over at [http://crushbeercrushcode.org/2013/03/developing-the-rogue-pi/](http://crushbeercrushcode.org/2013/03/developing-the-rogue-pi/)
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个与这些显示器相关的项目比我的简单黑客工作要复杂得多。我建议查看 [http://crushbeercrushcode.org/2013/03/developing-the-rogue-pi/](http://crushbeercrushcode.org/2013/03/developing-the-rogue-pi/)
    上的“RoguePi” 项目。
- en: Kalen Wessel, the man responsible for the project uses an RGB Pi Plate in his
    project. It changes color dependent on the circumstances. For example, it will
    run a connectivity check at start-up, resulting in a Green screen and a success
    message. If one of its tests fails, the screen turns red. Really slick stuff!
    He kindly includes the Python code used to do all of this, which makes it a must
    read in my opinion! Just be sure to buy the RGB version of the Adafruit Pi Plate
    to use his scripts!
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 项目负责人卡伦·韦瑟尔在他的项目中使用了一个 RGB Pi Plate。它根据情况变换颜色。例如，在启动时它会运行连接检查，结果是绿色屏幕和成功消息。如果其中一个测试失败，屏幕就会变红。真是漂亮的东西！他友好地包含了用于执行所有这些操作的
    Python 代码，我认为这是必读的！只需确保购买 Adafruit Pi Plate 的 RGB 版本以使用他的脚本！
- en: Wireless dongles
  id: totrans-363
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 无线接收器
- en: Adding a wireless interface allows the flexibility to perform more attacks.
    First of all, it could be used to capture handshake packets, connect to corporate
    wireless, or host a rogue access point. Additionally, why not try just using it
    as a means of connecting back into the “dropbox” in the event that it loses its
    other modes of connectivity.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 添加无线接口允许更灵活地执行更多攻击。首先，它可以用于捕获握手数据包、连接到公司无线网络或主持伪造访问点。另外，为什么不尝试只将其用作在失去其他连接方式时重新连接到“dropbox”的手段呢？
- en: In terms of hardware, the Alfa dongles are usually a safe bet, however, it is
    worth noting that the older version (such as the trusty Alfa AWUS036H) does not
    support Wireless-N. Just a reminder here, a Pi will probably not take too kindly
    to having to power itself and the Wireless dongle. Use a powered hub for all peripherals.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 就硬件而言，阿尔法接收器通常是一个不错的选择，但值得注意的是，旧版本（例如可靠的阿尔法 AWUS036H）不支持无线 N。在这里提醒一下，Pi 可能不会很喜欢不得不为自己和无线接收器供电。对于所有外围设备，请使用带电源的集线器。
- en: It is more than likely that there will be a strong desire to have the Aircrack-ng
    suite installed on the Pi. It won’t be available from the repositories due to
    a conflict with iw, so it will need to be built from source. Luckily this isn’t
    very complicated.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 很可能会有强烈的愿望在 Pi 上安装 Aircrack-ng 套件。由于与 iw 存在冲突，它将无法从存储库中获取，因此需要从源代码构建。幸运的是，这并不是很复杂。
- en: Start by checking that the latest versions of “build-essential” and “libssl-dev”
    are installed and then commence downloading the Aircrack-ng package.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 首先检查是否安装了“build-essential”和“libssl-dev”的最新版本，然后开始下载 Aircrack-ng 软件包。
- en: '[PRE109]'
  id: totrans-368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: '[PRE110]'
  id: totrans-369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: '[PRE111]'
  id: totrans-370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: '[PRE112]'
  id: totrans-371
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: '[PRE113]'
  id: totrans-372
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: '[PRE114]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: Now it’s time to build the tools. Some of these steps make take a while!
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候开始制造工具了。其中一些步骤可能需要一段时间！
- en: '[PRE115]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: '[PRE116]'
  id: totrans-376
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: '[PRE117]'
  id: totrans-377
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: '[PRE118]'
  id: totrans-378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: '[PRE119]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: Now let’s plug in the dongle and launch Airodump and see if everything is working!
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们插入 dongle 并启动 Airodump，看看是否一切正常！
- en: '[PRE120]'
  id: totrans-381
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: '[PRE121]'
  id: totrans-382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: '[PRE122]'
  id: totrans-383
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: '[PRE123]'
  id: totrans-384
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: '[PRE124]'
  id: totrans-385
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: '[PRE125]'
  id: totrans-386
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: '[PRE126]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: '[PRE127]'
  id: totrans-388
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: '[PRE128]'
  id: totrans-389
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: '[PRE129]'
  id: totrans-390
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: '[PRE130]'
  id: totrans-391
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: '[PRE131]'
  id: totrans-392
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: '[PRE132]'
  id: totrans-393
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: '[PRE133]'
  id: totrans-394
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: The choices here could be to stick with this kind of attack, attempting to capture
    and crack handshakes, or to try and set up a rogue AP. The preferred choice would
    be to deploy a wireless Pineapple alongside the “dropbox” for this attack vector.
    This could route the Internet traffic into the Pi and out of its 3G interface
    if so required.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 选择可能是坚持这种攻击方式，试图捕获和破解握手，或者尝试设置一个 rogue AP。首选选择是在这种攻击向量中部署一个无线 Pineapple 并配合“dropbox”。如果需要，这可以将
    Internet 流量路由到 Pi 并从其 3G 接口输出。
- en: Choosing a case for your dropbox
  id: totrans-396
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 选择一个适合你的 dropbox 的外壳
- en: There is a massive choice of potential cases for a “dropbox” out there, but
    which is best suited to our specific task? That depends on how many add-ons are
    being deployed with the Pi. If it is being sent out there with a screen, wireless,
    and 3G dongle, it won’t fit in any of the standard ones. In such cases, why not
    try going for a small Pelican hard case, like the 1050? This case is big enough
    to fit the Pi and some extra goodies without any issue. However, it would need
    some modifications, so as to enable power and network cable access. It isn’t the
    smallest case out there, but it still could quite easily be hidden under a desk
    or floor plate without issue ([Figure 12.10](#F0055)).
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多潜在的“dropbox”外壳可供选择，但哪一个最适合我们的特定任务呢？这取决于与 Pi 一起部署的附件数量。如果它带有屏幕、无线和 3G dongle
    发送出去，那么它就不适合任何标准的箱子。在这种情况下，为什么不试试小型的 Pelican 硬箱，比如 1050？这个箱子足够大，可以轻松地放入 Pi 和一些额外的好东西而不会出现任何问题。但是，它需要进行一些修改，以便使电源和网络电缆可以接入。它并不是最小的箱子，但是它仍然可以很容易地被隐藏在桌子或地板板下而不会出现问题（参见[图
    12.10](#F0055)）。
- en: '![image](../images/F000120f12-10-9780124201248.jpg)'
  id: totrans-398
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/F000120f12-10-9780124201248.jpg)'
- en: Figure 12.10 Pelican and standard Pi cases.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.10 Pelican 和标准 Pi 外壳。
- en: 'There are more discrete case types, those designed to be hidden in plain sight,
    such as OKW’s collection of plug cases that could work with some modifications—[http://www.okw.co.uk/products/okw/plug.htm](http://www.okw.co.uk/products/okw/plug.htm).
    However, these modifications can be quite extensive. For a start, the S-Video
    connector would need to be removed from the Pi, and the USB ports would have to
    be relocated too. This isn’t unprecedented, though, in fact some people have replaced
    the current USB ports with a USB header, and then attached an internal, powered
    USB hub to it. One such person is Oliver Jenkins, further information can be gleaned
    from here: [http://www.oliverjenkins.com/blog/2012/6/changing-usb-socket-on-raspberry-pi](http://www.oliverjenkins.com/blog/2012/6/changing-usb-socket-on-raspberry-pi).'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 还有更加隐秘的外壳类型，设计成藏在显眼处的，比如 OKW 的插头外壳系列，可以进行一些修改后使用——[http://www.okw.co.uk/products/okw/plug.htm](http://www.okw.co.uk/products/okw/plug.htm)。然而，这些修改可能相当广泛。首先，需要从
    Pi 上拆下 S-Video 连接器，USB 端口也必须重新定位。但这并不是没有先例的，事实上一些人已经用 USB 头替换了当前的 USB 端口，然后连接了一个内部的、有源
    USB 集线器。其中一位这样做的人是 Oliver Jenkins，可以从这里获取更多信息：[http://www.oliverjenkins.com/blog/2012/6/changing-usb-socket-on-raspberry-pi](http://www.oliverjenkins.com/blog/2012/6/changing-usb-socket-on-raspberry-pi)。
- en: Anyway, this is not for the faint of heart, and you can kiss goodbye to any
    warranty, at the very least! This is one of those ideas that is my list of things
    to do when I’m having a crazy day I think ([Figures 12.11](#F0060) and [12.12](#F0065)).
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 不管怎样，这不适合胆小的人，你至少要放弃任何保修！这是我在疯狂的日子里要做的事情清单上的一个想法（参见[图 12.11](#F0060) 和 [12.12](#F0065)）。
- en: '![image](../images/F000120f12-11-9780124201248.jpg)'
  id: totrans-402
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/F000120f12-11-9780124201248.jpg)'
- en: Figure 12.11 OKW case.
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.11 OKW 外壳。
- en: '![image](../images/F000120f12-12-9780124201248.jpg)'
  id: totrans-404
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/F000120f12-12-9780124201248.jpg)'
- en: Figure 12.12 OKW case with Pi.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.12 带有 Pi 的 OKW 外壳。
- en: There are other alternatives though. People have built these “dropboxes” into
    laptop power bricks, eight-way power supplies, switches, access points, and a
    whole host of other recycled cases. A nice idea is that of building it into a
    desktop switch and wiring the Ethernet ports directly through to the Pi, but that
    is a topic for another book.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 当然还有其他选择。人们已经将这些“投递箱”集成到笔记本电源适配器、八路电源供应器、交换机、接入点以及其他各种回收箱中。一个不错的想法是将其集成到桌面交换机中，并将以太网端口直接连接到树莓派，但这是另一本书的话题。
- en: Adding OpenVPN to our backdoor
  id: totrans-407
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将 OpenVPN 添加到我们的后门
- en: This was touched upon OpenVPN briefly in an earlier section. The idea is fairly
    straightforward. Instead of just relying on reverse SSH connections, why not establish
    a full VPN, which allows us unrestricted access into the target network? For all
    intents and purposes it would be like being sat in the office with a wired connection
    to the LAN. This is certainly going to be far more flexible than an SSH tunnel!
    What’s more, this will work over our 3G connection too! 3G and 4G dongles are
    high-bandwidth devices these days, so should not be overlooked.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的部分简要提到了 OpenVPN。这个想法非常简单。与其仅依赖于反向 SSH 连接，为什么不建立一个完整的 VPN，允许我们无限制地访问目标网络？从所有方面来看，这就像坐在办公室里，通过有线连接访问局域网一样。这肯定比
    SSH 隧道更加灵活！而且，这也可以通过我们的 3G 连接工作！如今，3G 和 4G 便携式设备是高带宽设备，不容忽视。
- en: In our scenario, the RaspberryPi is going to be the OpenVPN client. It will
    establish a VPN connection to a server in our data center. If we are using the
    targets Internet connection this can help us to bypass any access restrictions
    such as inbound firewall rules. We will be able to configure the VPN to allow
    us to route traffic over the tunnel and into the target network. In the interests
    of keeping things simple, I will be using a Virtual Machine running Ubuntu Server
    to simulate the data center end of the connection. I would recommend following
    the process through and building it yourself.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的场景中，树莓派将成为 OpenVPN 客户端。它将与我们数据中心的服务器建立 VPN 连接。如果我们使用目标的互联网连接，这可以帮助我们绕过任何入站防火墙规则等访问限制。我们将能够配置
    VPN，使我们能够通过隧道路由流量进入目标网络。为了保持简单，我将使用运行 Ubuntu Server 的虚拟机来模拟连接的数据中心端。我建议您跟随流程并自己构建它。
- en: Install OpenVPN and generate the certificates and keys
  id: totrans-410
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 安装 OpenVPN 并生成证书和密钥
- en: Let’s get OpenVPN set up on our server first of all. It’s a pretty straightforward
    operation; we just need to carefully follow the steps to avoid any mistakes.
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 首先让我们在服务器上设置 OpenVPN。这是一个相当简单的操作；我们只需要仔细遵循步骤，避免任何错误。
- en: '[PRE134]'
  id: totrans-412
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: Yep, that’s all that is required to get it built. Next comes the configuration
    of the server, starting by copying a few files around.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，这就是构建所需的全部内容。接下来是配置服务器，首先要复制一些文件。
- en: '[PRE135]'
  id: totrans-414
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: '[PRE136]'
  id: totrans-415
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: 'We now need to edit the “vars” file to suit our needs. You are looking for
    values that will be added to the certificates we will generate. As an example:
    “export KEY_COUNTRY=“US”.”'
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要编辑“vars”文件以适应我们的需求。您要寻找将添加到我们将生成的证书中的值。例如：“export KEY_COUNTRY=“US”。”
- en: To be perfectly honest, for our purposes, these values could be set to anything.
    Use a text editor of your choosing to edit the values.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 坦率地说，对于我们的目的，这些值可以设置为任何值。使用您选择的文本编辑器编辑这些值。
- en: We then need to run a couple of scripts to get things moving. Yes the first
    line below is “dot space dot slash.”
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们需要运行一些脚本来启动事情。是的，下面的第一行是“点空格点斜杠。”
- en: '[PRE137]'
  id: totrans-419
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: '[PRE138]'
  id: totrans-420
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: '[PRE139]'
  id: totrans-421
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: '[PRE140]'
  id: totrans-422
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: '[PRE141]'
  id: totrans-423
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: '[PRE142]'
  id: totrans-424
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: '[PRE143]'
  id: totrans-425
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: '[PRE144]'
  id: totrans-426
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: '[PRE145]'
  id: totrans-427
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: '[PRE146]'
  id: totrans-428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: '[PRE147]'
  id: totrans-429
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: '[PRE148]'
  id: totrans-430
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: '[PRE149]'
  id: totrans-431
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: '[PRE150]'
  id: totrans-432
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: '[PRE151]'
  id: totrans-433
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: '[PRE152]'
  id: totrans-434
  prefs: []
  type: TYPE_PRE
  zh: '[PRE152]'
- en: '[PRE153]'
  id: totrans-435
  prefs: []
  type: TYPE_PRE
  zh: '[PRE153]'
- en: '[PRE154]'
  id: totrans-436
  prefs: []
  type: TYPE_PRE
  zh: '[PRE154]'
- en: '[PRE155]'
  id: totrans-437
  prefs: []
  type: TYPE_PRE
  zh: '[PRE155]'
- en: '[PRE156]'
  id: totrans-438
  prefs: []
  type: TYPE_PRE
  zh: '[PRE156]'
- en: '[PRE157]'
  id: totrans-439
  prefs: []
  type: TYPE_PRE
  zh: '[PRE157]'
- en: '[PRE158]'
  id: totrans-440
  prefs: []
  type: TYPE_PRE
  zh: '[PRE158]'
- en: '[PRE159]'
  id: totrans-441
  prefs: []
  type: TYPE_PRE
  zh: '[PRE159]'
- en: '[PRE160]'
  id: totrans-442
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: You will be asked to configure several options as per the output, but we have
    already added them to the “vars” file so can just hit “enter” to keep each value.
    As I have already mentioned, you could just keep the shipping defaults if you
    so desired.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 按照输出要求配置几个选项，但我们已经将它们添加到“vars”文件中，因此只需按“enter”键保留每个值即可。正如我之前提到的，如果你愿意，也可以保留默认设置。
- en: 'Onto the next scripts that need to be executed:'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来需要执行的下一个脚本：
- en: '[PRE161]'
  id: totrans-445
  prefs: []
  type: TYPE_PRE
  zh: '[PRE161]'
- en: '[PRE162]'
  id: totrans-446
  prefs: []
  type: TYPE_PRE
  zh: '[PRE162]'
- en: '[PRE163]'
  id: totrans-447
  prefs: []
  type: TYPE_PRE
  zh: '[PRE163]'
- en: We now need to move the keys and certificates that we have generated into the
    correct directory.
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要将生成的密钥和证书移动到正确的目录中。
- en: '[PRE164]'
  id: totrans-449
  prefs: []
  type: TYPE_PRE
  zh: '[PRE164]'
- en: '[PRE165]'
  id: totrans-450
  prefs: []
  type: TYPE_PRE
  zh: '[PRE165]'
- en: Configure OpenVPN
  id: totrans-451
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 配置 OpenVPN
- en: Luckily this step is very easy. OpenVPN ships with example configurations which
    can be edited to fit our setup. Thankfully, there isn’t a lot to change to get
    things working. Let’s start by copying the example config to its correct location.
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，这一步非常简单。OpenVPN 随附示例配置，可以编辑以适应我们的设置。幸运的是，要使事情正常运行，需要改变的内容并不多。让我们从将示例配置复制到正确位置开始。
- en: '[PRE166]'
  id: totrans-453
  prefs: []
  type: TYPE_PRE
  zh: '[PRE166]'
- en: '[PRE167]'
  id: totrans-454
  prefs: []
  type: TYPE_PRE
  zh: '[PRE167]'
- en: We now need to edit the server.conf file and ensure that the location of the
    certificate and key files is correctly set to /etc/openvpn/keys. Open /etc/openvpn/server.conf
    using nano—sudo nano /etc/openvpn/server.conf
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要编辑 server.conf 文件，并确保证书和密钥文件的位置正确设置为 /etc/openvpn/keys。使用 nano 打开 /etc/openvpn/server.conf
    ——sudo nano /etc/openvpn/server.conf
- en: Look for the section that references ca.crt, server.crt and server.key. Ensure
    that this is set to /etc/openvpn/ca.crt /etc/openvpn/server.crt and /etc/openvpn/server.key.
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 寻找涉及 ca.crt、server.crt 和 server.key 的部分。确保设置为 /etc/openvpn/ca.crt、/etc/openvpn/server.crt
    和 /etc/openvpn/server.key。
- en: At this point, that’s all that needs to be done, at the server side. Not too
    traumatic really. Especially, considering that the tunnel will automatically come
    up at boot.
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，服务器端就做到这些了。真的不算太痛苦。特别是考虑到隧道会在启动时自动建立。
- en: Now, move onto the client, which in this case is the RaspberryPi dropbox.
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，转到客户端，这里是树莓派 Dropbox。
- en: Configuring the client
  id: totrans-459
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 配置客户端
- en: The process for building the client is extremely similar. Start by installing
    OpenVPN, and copying the client certificates from the server to the Pi. We will
    then amend the client example configuration to fit our needs. At this point restarting
    the OpenVPN demon should bring the tunnel up. Let’s get started!
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 构建客户端的过程非常类似。首先安装 OpenVPN，并将客户端证书从服务器复制到 Pi。然后，我们将修改客户端示例配置以适应我们的需求。此时重新启动 OpenVPN
    守护程序应该可以建立隧道。让我们开始吧！
- en: If the root account, on the Pi, has not already been enabled, it needs to be
    done now. Just enter passwd root and enter a new root password.
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Pi 上的 root 帐户尚未启用，则现在需要启用。只需输入 passwd root 并输入新的 root 密码。
- en: Install OpenVPN—sudo apt-get install openvpn
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 OpenVPN ——sudo apt-get install openvpn
- en: Next log back onto the server to Secure Copy (SCP) the certificate files to
    the Pi
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，返回服务器以使用安全复制（SCP）将证书文件复制到 Pi
- en: '[PRE168]'
  id: totrans-464
  prefs: []
  type: TYPE_PRE
  zh: '[PRE168]'
- en: '[PRE169]'
  id: totrans-465
  prefs: []
  type: TYPE_PRE
  zh: '[PRE169]'
- en: You should see the transfers succeed! If not, try and troubleshoot why, as this
    isn’t going to work without them.
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到传输成功！如果没有，请尝试排除原因，因为如果没有这些传输，它将无法正常工作。
- en: Now go back to the Pi and copy the example configuration that ships with OpenVPN.
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 现在返回到 Pi 并复制随 OpenVPN 一起提供的示例配置。
- en: '[PRE170]'
  id: totrans-468
  prefs: []
  type: TYPE_PRE
  zh: '[PRE170]'
- en: Next, edit the file to match our environment—sudo nano /etc/openvpn/client.conf,
    find the string “remote my-server-1 1194.” Change “my-server” to the server’s
    IP address. The port is User Datagram Protocol (UDP)/1194 by default, but any
    port maybe chosen. TCP/443 might be a good choice if the VPN is expected to travel
    through a client’s infrastructure. In this case, the tunnel will be established
    over 3G, which should not have any restrictions.
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，编辑文件以匹配我们的环境——sudo nano /etc/openvpn/client.conf，找到字符串“remote my-server-1
    1194”。将“my-server”更改为服务器的 IP 地址。默认情况下，端口是用户数据报协议（UDP）/ 1194，但可以选择任何端口。如果预计 VPN
    将通过客户端的基础设施传输，则 TCP/443 可能是一个不错的选择。在这种情况下，隧道将通过 3G 建立，不应该有任何限制。
- en: Much like the server.conf, edited earlier, it is important to ensure that the
    client keys and certificates are properly referenced in client.conf. Again, each
    of the files was copied to /etc/openvpn so ensure that the configuration file
    reflects this.
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前编辑的 server.conf 类似，确保在 client.conf 中正确引用客户端密钥和证书非常重要。同样，每个文件都被复制到 /etc/openvpn，因此确保配置文件反映了这一点。
- en: All that is required now, is to restart the OpenVPN demon at each side of the
    connection, starting with the server sudo /etc/init.d/openvpn restart.
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: 现在所需的一切就是在连接的每一端重新启动 OpenVPN 守护程序，从服务器开始 sudo /etc/init.d/openvpn restart。
- en: At this point, the tunnel should have established. Verify this by running “ifconfig”
    and “route -n.” There should be a “tun0” interface and several routes using it
    as a hop.
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，隧道应该已经建立。通过运行“ifconfig”和“route -n”来验证这一点。应该有一个“tun0”接口和使用它作为跳跃点的几条路由。
- en: Each end of the connection usually comes up with a 10.8.0.x address. Try running
    NMAP to figure out what address the remote end (The Pi) has given itself—Nmap
    -sn 10.8.0.0/24.
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 连接的每一端通常都会出现一个 10.8.0.x 的地址。尝试运行 NMAP 以查找远程端（Pi）分配给自己的地址——Nmap -sn 10.8.0.0/24。
- en: As an example, in this setup the Pi had acquired 10.8.0.6\. It is possible to
    actually communicate directly with the Pi over this address too, using SSH or
    any of the usual tools. All of this traffic is sent down the VPN!
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 作为示例，在这个设置中，Pi 获得了 10.8.0.6 的地址。实际上可以使用此地址直接与 Pi 通信，使用 SSH 或任何常用工具。所有这些流量都发送到
    VPN！
- en: This isn’t quite finished, there’s still the need to hack the routing a little
    bit to ensure access to the entire target network can be gained.
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 这还没有完全完成，仍然需要稍微修改路由，以确保可以访问整个目标网络。
- en: Routing issues and how to overcome them
  id: totrans-476
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 路由问题及其克服方法
- en: As it stands, it is not possible to ping from the OpenVPN server, to the local
    network of the Pi. There are two reasons for this. First of all, OpenVPN needs
    to be configured to route LAN traffic down the VPN tunnel. Second of all, devices
    in the target network do not have a return route back to the 10.8.0.0/24 network,
    well certainly not via this Pi in any case. Obviously, we are not in a position
    to modify the routing tables of the target network, nor would we want to. There
    is an alternative to this, however. We can hide all of our traffic behind the
    LAN IP address of the Pi dropbox. Because the Pi is plugged into the target network,
    it is known that all of the hosts within that network will be able to communicate
    with it. This is not dissimilar to how someone might configure a home broadband
    router, by hiding all of the home PCs behind the single public IP address that
    your router has. In our case, we are going to translate the 10.8.0.0/24 network
    to the 192.168.1.x network of our client.
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 目前来看，无法从 OpenVPN 服务器 ping 到 Pi 的本地网络。原因有两点。首先，OpenVPN 需要配置为将 LAN 流量路由到 VPN 隧道下。其次，目标网络中的设备没有返回路由回到
    10.8.0.0/24 网络，至少在这种情况下不会。显然，我们无法修改目标网络的路由表，也不想这样做。不过，有一个替代方案。我们可以将所有的流量隐藏在 Pi
    dropbox 的 LAN IP 地址后面。因为 Pi 插入了目标网络，所以知道该网络中的所有主机都能与其通信。这与某人可能如何配置家庭宽带路由器并隐藏所有家庭
    PC 后面的单个公共 IP 地址相似。在我们的情况下，我们将将 10.8.0.0/24 网络转换为客户端的 192.168.1.x 网络。
- en: Configure the following on the Pi “Dropbox.”
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 在树莓派上配置以下内容。
- en: '[PRE171]'
  id: totrans-479
  prefs: []
  type: TYPE_PRE
  zh: '[PRE171]'
- en: '[PRE172]'
  id: totrans-480
  prefs: []
  type: TYPE_PRE
  zh: '[PRE172]'
- en: '[PRE173]'
  id: totrans-481
  prefs: []
  type: TYPE_PRE
  zh: '[PRE173]'
- en: '[PRE174]'
  id: totrans-482
  prefs: []
  type: TYPE_PRE
  zh: '[PRE174]'
- en: That should handle the routing at the Pi side of the connection. Now configure
    OpenVPN to send traffic to 192.168.1.0/24 down the VPN tunnel.
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该处理连接的 Pi 端的路由。现在配置 OpenVPN 将流量发送到 192.168.1.0/24 下的 VPN 隧道。
- en: We will configure this on the OpenVPN server only.
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只会在 OpenVPN 服务器上配置这个。
- en: First of all, we need to edit the server.conf again, nano /etc/openvpn/server.conf.
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要再次编辑 server.conf，即 nano /etc/openvpn/server.conf。
- en: Find the line that says “client-config-dir ccd” and remove the semicolon which
    comments the line out.
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 找到标有“client-config-dir ccd”的行，并删除注释该行的分号。
- en: Directly below the line, add a route to our 192.168.1.0 255.255.255.0 network.
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: 直接在下面的行下面，添加一个路由到我们的 192.168.1.0 255.255.255.0 网络。
- en: '[PRE175]'
  id: totrans-488
  prefs: []
  type: TYPE_PRE
  zh: '[PRE175]'
- en: Save the file.
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件。
- en: Now create the “ccd” directory and place a config file in it.
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: 现在创建“ccd”目录并放置一个配置文件在其中。
- en: '[PRE176]'
  id: totrans-491
  prefs: []
  type: TYPE_PRE
  zh: '[PRE176]'
- en: The configuration file we will create needs to have the same name as the client.
    In our example we called it “client”—this was chosen when we generated the certificates!
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建的配置文件需要与客户端的名称相同。在我们的示例中，我们称之为“client”—这是在生成证书时选择的！
- en: '[PRE177]'
  id: totrans-493
  prefs: []
  type: TYPE_PRE
  zh: '[PRE177]'
- en: '[PRE178]'
  id: totrans-494
  prefs: []
  type: TYPE_PRE
  zh: '[PRE178]'
- en: Then add a route into the client file.
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 然后在客户端文件中添加一个路由。
- en: '[PRE179]'
  id: totrans-496
  prefs: []
  type: TYPE_PRE
  zh: '[PRE179]'
- en: The route command is slightly different to the one used earlier; don’t get the
    two confused or this is not going to work! Don’t forget to save the file. All
    we need to do is restart our OpenVPN server and we should be in business!
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: route 命令与之前使用的命令略有不同；不要混淆这两个，否则将无法工作！别忘了保存文件。我们所需要做的就是重新启动我们的 OpenVPN 服务器，我们应该能够开始工作了！
- en: '[PRE180]'
  id: totrans-498
  prefs: []
  type: TYPE_PRE
  zh: '[PRE180]'
- en: '[PRE181]'
  id: totrans-499
  prefs: []
  type: TYPE_PRE
  zh: '[PRE181]'
- en: '[PRE182]'
  id: totrans-500
  prefs: []
  type: TYPE_PRE
  zh: '[PRE182]'
- en: '[PRE183]'
  id: totrans-501
  prefs: []
  type: TYPE_PRE
  zh: '[PRE183]'
- en: '[PRE184]'
  id: totrans-502
  prefs: []
  type: TYPE_PRE
  zh: '[PRE184]'
- en: '[PRE185]'
  id: totrans-503
  prefs: []
  type: TYPE_PRE
  zh: '[PRE185]'
- en: '[PRE186]'
  id: totrans-504
  prefs: []
  type: TYPE_PRE
  zh: '[PRE186]'
- en: '[PRE187]'
  id: totrans-505
  prefs: []
  type: TYPE_PRE
  zh: '[PRE187]'
- en: '[PRE188]'
  id: totrans-506
  prefs: []
  type: TYPE_PRE
  zh: '[PRE188]'
- en: As you can see, we now have a route to the 192.168.1.0/24 network using interface
    tun0, our VPN! The gateway for this network is 10.8.0.2, which belongs to our
    RaspberryPi. You should now be able to access anything in that network from your
    OpenVPN server. You will need to repeat the route additions for any other target
    network you wish to access. Your access will be no different to being physically
    plugged in yourself, other than the bandwidth of course. This works sufficiently
    over our 3G connection too, although I would be tempted to bring a second tunnel
    up over the client’s connectivity once I had control of the Pi.
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，我们现在有了一个路由到 192.168.1.0/24 网络，使用 tun0 接口，即我们的 VPN！该网络的网关是 10.8.0.2，属于我们的
    RaspberryPi。您现在应该能够从 OpenVPN 服务器访问该网络中的任何内容。您需要为您希望访问的任何其他目标网络重复路由添加。您的访问方式与自己直接插入的方式没有什么不同，当然除了带宽。这在我们的
    3G 连接上也足够工作，尽管我可能会在控制 Pi 后首先在客户端的连接上建立第二个隧道。
- en: Don’t forget that you could allow your OpenVPN server to route traffic with
    the echo 1 > /proc/sys/net/ipv4/ip_forward statement. You could then use the server
    as a gateway to the target network, so that multiple engineers can access the
    scope. Alternatively, you could install the OpenVPN client on each consultant’s
    machine, and get to the target in that way. The world is your oyster!
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记，您可以允许您的OpenVPN服务器通过执行echo 1 > /proc/sys/net/ipv4/ip_forward语句来路由流量。然后，您可以使用服务器作为进入目标网络的网关，以便多个工程师可以访问范围。或者，您可以在每个顾问的计算机上安装OpenVPN客户端，并以这种方式访问目标。世界是你的！
- en: Alternative dropboxes
  id: totrans-509
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 替代性投递箱
- en: There are other options available, when considering what to leave behind enemy
    lines. It does not necessarily have to be a computer of some type; it can just
    be a device that enables connectivity into the target network. Let’s take a look
    at some of the options to flesh out the concept.
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 在考虑在敌人阵地留下什么时，还有其他选择。它不一定必须是某种类型的计算机；它可以只是一种使连接进入目标网络的设备。让我们看看一些选项，以充实这个概念。
- en: 3G and IP KVMs
  id: totrans-511
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3G和IP KVMs
- en: Two recent high-profile breaches have highlighted the use of 3G-enabled KVMs
    (Keyboard, Video, and Mouse) for remote compromises. A KVM is a system designed
    to provide console level access to a system. In essence, it is like being sat
    at a monitor and keyboard. It is possible to reboot the system and get into the
    BIOS and perform any task that physical access would allow. KVMs have been around
    for a long time, and have evolved with the industry, offering connectivity over
    the network and in some cases the cellular network. This was highlighted in the
    two previously mentioned breaches.
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 最近发生的两起备受关注的入侵事件突显了使用3G启用的KVMs（键盘、视频和鼠标）进行远程入侵的情况。KVM是一种旨在提供系统控制台级访问权限的系统。本质上，这就像坐在显示器和键盘前一样。可以重新启动系统并进入BIOS并执行任何物理访问允许的任务。KVM已经存在很长时间，并随着行业的发展而发展，提供网络连接和在某些情况下提供蜂窝网络连接。这在前面提到的两起入侵事件中得到了突出展示。
- en: The attacks targeted bank computer systems at both Santander and Barclays branches.
    The 3G-enabled KVM was installed on branch computers, allowing the attackers to
    take control of the systems remotely and make transfers of large sums of money.
    In the case of Santander, the device was spotted before any money could be stolen,
    but Barclays were not so lucky. The attackers managed to steal £1.3 m. After seeing
    pictures of the devices in use, it appears that the IP KVM was connected to a
    3G-enabled router that allowed the remote connectivity. The devices were discrete
    and would not have looked out of place in an office or branch environment to the
    vast majority of people.
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击针对桑坦德和巴克莱分行的银行计算机系统。3G启用的KVM安装在分行计算机上，使攻击者能够远程控制系统并转移大笔资金。在桑坦德的情况下，在任何资金被盗之前就发现了该设备，但巴克莱就没有那么幸运。攻击者设法窃取了130万英镑。在看到设备使用图片后，似乎IP
    KVM连接到了一个允许远程连接的3G启用路由器。这些设备是隐蔽的，对于绝大多数人来说在办公室或分支机构环境中看起来并不突兀。
- en: The KVM was installed in what appears to be a classic social engineering type
    attack. They posed as IT staff who were on-site to perform maintenance on the
    bank computers. While specifics on the pretext are not available at the time of
    writing, we have covered examples that could certainly work throughout this book.
    The question is now, how many other banks and organizations have these rogue devices
    on their network?
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: KVM安装在看起来是经典社会工程类型攻击的情况下。他们冒充IT人员，声称是现场维护银行计算机的人员。虽然在撰写本文时尚未提供有关借口的具体信息，但我们在本书中已经涵盖了可能在整个过程中起作用的示例。现在的问题是，还有多少其他银行和组织在其网络上拥有这些恶意设备？
- en: These cases are perfect examples of the blended threat that modern attacks pose.
    They integrated social engineering elements to get into the branches, and then
    technology related trickery to acquire remote access. The most intriguing thing
    to me was that they did this with off-the-shelf hardware. It is without doubt
    that there is a certain level of admiration for the effort that was put in, even
    if they do deserve to go to prison for a long time. I’m certainly on the lookout
    for a reasonably priced IP/3G KVM in any case!
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 这些案例是现代攻击所构成的混合威胁的完美例子。它们整合了社会工程学元素以进入分支机构，然后利用技术相关的诡计获取远程访问权限。对我来说最有趣的是，他们是用现成的硬件完成的。毫无疑问，对于他们付出的努力，我确实有一定程度的钦佩，即使他们确实应该长期监禁。无论如何，我肯定会寻找价格合理的IP/3G
    KVM！
- en: We made use of 3G connectivity in our dropbox build section. Build one yourself
    if you haven’t already!
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在我们的投放盒搭建部分使用了3G连接。如果你还没有的话，自己动手搭建一个吧！
- en: Routers
  id: totrans-517
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 路由器
- en: A 3G capable router could definitely be a useful “dropbox.” Plugging the device
    into the network and letting it create a VPN back to the data center, over cellular,
    is as good as having local network access. There are several manufacturers that
    make suitable devices. Cisco and DrayTek make several devices that would be up
    to the job. It might be that you already have one of these devices lying around,
    in which case make the most of it.
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: 一个支持3G的路由器绝对可以成为一个有用的“投放盒”。将设备插入网络并让它通过蜂窝网络创建VPN返回数据中心，就像拥有本地网络访问一样。有几家制造商生产适合的设备。思科和DrayTek制造了几款适合此工作的设备。也许你已经有这些设备中的一款了，如果是这样的话，就好好利用它吧。
- en: Having a fully functional computer behind enemy lines certainly offers a lot
    more flexibility at the end of the day, but a router could be a good option in
    many instances. We have already covered the use of OpenVPN on the Linux platform
    to offer identical connectivity options with more flexibility to boot!
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: 在敌方阵地后面拥有一个完全功能的计算机在某种程度上确实提供了更多的灵活性，但在许多情况下，路由器可能是一个很好的选择。我们已经介绍了在Linux平台上使用OpenVPN来提供相同的连接选项，而且灵活性更强！
- en: Wireless access points
  id: totrans-520
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 无线接入点
- en: There is a lot to be said for the use of a good quality wireless access point
    for social engineering gigs. First of all, it literally could not be any simpler,
    just plug it in and get out of there. Assuming the device is well made, and you
    tried to avoid too many obstructions between the AP and your remote location,
    you should be good to go. Of course, there are obvious limitations and issues
    with wireless access points that may cause us problems on the assessment. First
    of all, range can often be an issue, especially where older buildings are concerned,
    or those with thick concrete walls. As long as there is a decent antenna for the
    laptop, there shouldn’t be too many problems. Have a look at installing a high
    gain antenna on the access point itself. The other issue is that of visibility.
    If the target has any sort of wireless Intrusion Detection System (IDS) solution
    they may well track down the access point before the task can be completed. In
    some cases, naming the access point’s Service Set Identifier (SSID) after a neighboring
    business will be enough to ensure that it flies under the radar.
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 对于社交工程活动来说，使用高品质无线接入点有很多好处。首先，它实际上是非常简单的，只需插上电源就可以了。假设设备做工精良，并且你尽量避免AP和远程位置之间有太多障碍物，那么你应该可以顺利进行。当然，无线接入点也存在明显的局限性和问题，这可能会在评估中给我们带来麻烦。首先，范围通常是一个问题，特别是在老建筑物或者有厚厚混凝土墙的地方。只要笔记本电脑有一个不错的天线，应该就不会有太多问题。考虑在接入点上安装一个高增益天线。另一个问题是可见性。如果目标有任何形式的无线入侵检测系统（IDS）解决方案，他们很可能会在任务完成之前追踪到接入点。在某些情况下，将接入点的服务集标识符（SSID）命名为邻近企业的名称就足以确保它能够逃过监控。
- en: Having a handful of different types of access points for different scenarios
    is extremely handy, but the Belkin Go N300 has provided some notable successes.
    It’s very small with no external antenna but still appears to get good range.
    It’s about the size of a deck of cards, and doesn’t even really look like an access
    point. Perfect for hiding under the floor or even in plain sight.
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 对于不同场景拥有几种不同类型的接入点确实非常方便，但是Belkin Go N300已经取得了一些显著的成功。它非常小，没有外部天线，但仍然似乎有良好的覆盖范围。它大约和一副牌的大小差不多，甚至看起来不像是一个接入点。非常适合隐藏在地板下甚至是显眼的地方。
- en: Compromising internal systems
  id: totrans-523
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 危害内部系统
- en: In fairness, this one isn’t physically a “dropbox,” but logically it certainly
    fits the bill. Instead of just taking the hardware, take a USB stick with a Metasploit
    payload on board. This could then be used to compromise an internal system and
    create a reverse tunnel back to the HQ. Of course, this kind of attack relies
    on either finding a system unlocked or persuading somebody else to run the payload.
    In any case, it can afford the same level of access that a “dropbox” would allow,
    without the risk of it being discovered. On the down side, nothing says “call
    security” better than an antivirus notification when a receptionist is handed
    a USB stick.
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: 公平地说，这个并不是物理上的“投递盒”，但逻辑上肯定符合要求。不仅仅带走硬件，还带上一个带有Metasploit负载的USB棒。然后可以用它来入侵内部系统并创建一个反向隧道回总部。当然，这种攻击依赖于找到一个未锁定的系统或说服其他人运行负载。无论如何，它可以提供与“投递盒”相同级别的访问权限，而不会被发现的风险。不过，当接待员拿到一个USB棒时，没有什么比一个杀毒软件通知更能表明“请叫安保”了。
- en: Other useful gadgets
  id: totrans-525
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他有用的小工具
- en: I love gadgets, as you can probably tell from this entire chapter so far! I
    love building them, tweaking them, breaking them, and making them do things they
    weren’t intended to do. What fun would it be if everything just did what it says
    on the packet? This is probably why I do what I do for a living. As well as what
    we have already discussed, there are some other useful gadgets that we should
    always have to hand on a social engineering engagement. Let’s take a look at them.
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢小工具，从这一整章节你可能已经能够看出来了！我喜欢制造它们，调整它们，损坏它们，并让它们做一些它们本不应该做的事情。如果一切都只是按照说明书上说的那样，那会有多无趣呢？这可能就是我以我的职业为乐的原因。除了我们已经讨论过的内容，还有一些其他在社会工程学中必备的有用小工具。让我们来看看它们。
- en: Keyloggers
  id: totrans-527
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 键盘记录器
- en: Keyloggers have been around in various forms for a very long time. They are
    usually a small device that sits between a keyboard and the computer to capture
    data, such as every keystroke. They come in both USB and PS2 format, although
    it might be a struggle to find PS2 mice and keyboards in any modern environment,
    most credit card devices use PS2 connections.
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 键盘记录器在各种形式上已经存在很长时间了。它们通常是一个小设备，位于键盘和计算机之间，用于捕获数据，比如每次按键。它们有USB和PS2两种格式，尽管在任何现代环境中可能很难找到PS2鼠标和键盘，但大多数信用卡设备使用PS2连接。
- en: Even though they are positively ancient, they are still exceptionally useful
    on an engagement. The main reason for this is that they are tiny and typically
    may not be found by staff for years. Not that anyone would want to leave one in
    place for this length of time. They are also very simple and quick to install,
    which is always a bonus on an engagement, where time is almost certainly going
    to be tight.
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管它们非常古老，但在社会工程学中仍然异常有用。这主要原因是它们非常小，通常可能多年都不会被员工发现。尽管没有人会想要让它在那里放这么长时间。它们也非常简单快速安装，这在社会工程学中总是一个优点，因为时间几乎肯定会很紧张。
- en: The main challenge with Keyloggers is that a return journey to the target is
    required, to recover them, and even then who knows what they will have captured.
    The aim is to capture credentials for a system, which can be used throughout the
    engagement, so as long as the chosen machine that looks to be in use, it’s a result!
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: 键盘记录器的主要挑战在于需要返回目标机器来取回它们，即使这样，谁知道它们会捕获到什么。目的是捕获系统的凭证，这些凭证可以在整个过程中使用，只要选择的机器看起来正在使用，那就成功了！
- en: Be careful when buying a USB keylogger, ensure it looks something like the one
    shown in [Figure 12.13](#F0075).
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 购买USB键盘记录器时要小心，确保它看起来像[图12.13](#F0075)中所示的那样。
- en: '![image](../images/F000120f12-13-9780124201248.jpg)'
  id: totrans-532
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/F000120f12-13-9780124201248.jpg)'
- en: Figure 12.13 A typical USB keylogger.
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.13 一个典型的USB键盘记录器。
- en: Note that it has two USB connections, one which plugs into the target computer
    and one for the keyboard to plug into. A lot of people are selling a ‘keylogger’
    that is basically little more than a USB stick which has some keylogging software
    on board. Basically, one of these could easily be made using Metasploit or the
    Social Engineering Toolkit.
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意它有两个USB连接，一个插入目标计算机，另一个供键盘插入。很多人在出售一个基本上只是一个带有一些键盘记录软件的USB棒的“键盘记录器”。基本上，这样的一个可以很容易地使用Metasploit或社会工程工具包制作。
- en: The problem with this kind of keylogger, is that they require the installation
    of a service, which requires admin rights on the target host. In other words,
    they are slow to deploy and clunky too. They are more widely used from a monitoring
    point of view than a social engineering point of view.
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: 这种类型的键盘记录器的问题在于它们需要在目标主机上安装服务，这需要管理员权限。换句话说，它们部署速度慢且笨重。它们更多地被用于监控而不是社会工程的角度。
- en: Audio recording devices
  id: totrans-536
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 录音设备
- en: There are plenty of shops that sell audio spying devices. These can be triggered
    to record based on movement or sound. Again, the issue with leaving a device behind
    is that it has to be recovered in order to access the recorded data, much like
    the keyloggers. An alternative idea is to add a USB microphone to the RaspberryPi
    dropbox. This could then be used to record to local files, which can be downloaded
    over the OpenVPN. What about even adding a camera so that there are eyes on the
    target organization, as well. The “dropbox” would then be especially useful in
    sensitive areas or meeting rooms.
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多商店出售音频监听设备。这些设备可以根据移动或声音触发录制。同样，留下设备的问题在于必须恢复才能访问录制的数据，就像键盘记录器一样。另一个想法是将
    USB 麦克风添加到 RaspberryPi 的 Dropbox 中。然后可以用它来记录到本地文件，可以通过 OpenVPN 下载。甚至添加摄像头，这样目标组织就有了眼睛。在敏感区域或会议室中，“dropbox”
    将特别有用。
- en: Teensy USB
  id: totrans-538
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Teensy USB
- en: The Teensy USB is basically a little USB stick, which is recognized by systems
    as a Human Interface Device, in other words, a keyboard. The device is programmable
    and can issue any command or set of key strokes that you require. Because it is
    picked up as a keyboard, it works on all types of systems.
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: Teensy USB 基本上是一个小型的 USB 存储设备，被系统识别为人机接口设备，换句话说，一个键盘。该设备是可编程的，可以发出您需要的任何命令或一组按键。由于它被识别为键盘，它适用于所有类型的系统。
- en: As security professionals, this feature set is often used in order to compromise
    workstations and servers.
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: 作为安全专业人员，这个功能集通常被用来妥协工作站和服务器。
- en: Better yet, the Social Engineering Toolkit supports the creation of Teensy compatible
    Metasploit payloads. All that is needed is to create a listener somewhere and
    plug the Teensy into the target host.
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: 更好的是，社会工程工具包支持创建与 Teensy 兼容的 Metasploit 负载。所需的只是在某处创建一个监听器，然后将 Teensy 插入目标主机。
- en: Malicious USB sticks
  id: totrans-542
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 恶意的 USB 存储设备
- en: It’s always worth having a malicious USB stick prepared and ready to go in the
    event that an unlocked workstation is discovered. Quickly run the payload and
    have a reverse session back to the team at the HQ, in no time.
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，如果发现了一个未锁定的工作站，随时准备好一个恶意的 USB 存储设备是值得的。快速运行负载，然后在短时间内与总部的团队建立一个反向会话。
- en: The Social Engineering Toolkit supports the generation of malicious USB sticks
    that take advantage of Autorun, as a method of execution. The usual risks apply
    with this type of behavior though. This could trigger antivirus or Intrusion Prevention
    Systems (IPS) alerts and have people on the hunt, in fairly short order. Ensuring
    that the payload is well encoded and encrypted can often ensure that it bypasses
    most antivirus solutions, but the outbound connection may still be flagged by
    IPS.
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 社会工程工具包支持生成利用 Autorun 的恶意 USB 存储设备，作为执行的方法。尽管如此，这种行为的通常风险仍然存在。这可能会触发杀毒软件或入侵防御系统（IPS）警报，并且迅速有人在较短的时间内寻找。确保负载编码和加密良好通常可以确保其绕过大多数杀毒软件解决方案，但出站连接可能仍然会被
    IPS 标记。
- en: It’s always worth having the option, better to have it and not need it, than
    need it and not have it.
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: 有这个选择总是值得的，最好有它而不需要它，也比需要它而没有它要好。
- en: WiFi Pineapple
  id: totrans-546
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: WiFi Pineapple
- en: I have already mentioned this crazy little box of tricks, so it should be obvious
    that I really like them. It certainly is a useful device, although it probably
    doesn’t fit within the remit of classic social engineering.
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经提到过这个疯狂的小魔盒，所以显然我真的很喜欢它们。它绝对是一个有用的设备，尽管它可能不符合经典社会工程的范畴。
- en: If you have ever connected to an open wireless network, the device used will
    continue to look for that network long after the day has passed. The Pineapple
    takes advantage of this “feature” by responding to the probe claiming to be that
    access point. At this point, the client connects, often without the knowledge
    of the victim. You are now sat “in the middle” of this connection, and can run
    packet captures or divert traffic, even spoof Domain Name Service (DNS) responses.
    Obviously, this is extremely powerful, especially in the wrong hands!
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您曾经连接到开放的无线网络，那么使用的设备将在过去的一天结束后继续搜索该网络。 Pineapple利用了这一“特性”，通过响应声称是该接入点的探测请求来进行攻击。此时，客户端连接，通常受害者并不知情。现在，您就坐在了这个连接的“中间”，可以运行数据包捕获或重定向流量，甚至伪造域名服务（DNS）响应。显然，这是非常强大的，尤其是放在错误的手中！
- en: It is extremely important for social engineers to be careful about how this
    data is used and what to look for. Try to avoid being in a position where personal
    data ends up being captured, thus violating various laws in the process.
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: 对于社会工程师来说，非常重要的是要小心如何使用这些数据以及要注意什么。尽量避免陷入个人数据被捕获的境地，从而违反了一些法律。
- en: Again, while this is not strictly social engineering territory, in a blended
    assessment it is a very useful tool in the arsenal!
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: 同样地，虽然这不严格属于社会工程领域，但在混合评估中，它是一种非常有用的工具！
- en: The WiFi Pineapple is available to buy from Hak5—[http://hakshop.myshopify.com/products/wifi-pineapple](http://hakshop.myshopify.com/products/wifi-pineapple).
    At $89.99 it is an absolute steal.
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: WiFi Pineapple可以从Hak5购买 - [http://hakshop.myshopify.com/products/wifi-pineapple](http://hakshop.myshopify.com/products/wifi-pineapple)。售价$89.99，绝对物有所值。
- en: Summary
  id: totrans-552
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概要
- en: This chapter covered the use of various technology types to augment an assessment.
    This included a look at some of the challenges when performing the physical portion
    of an engagement. The physical portion is where the consultant turns up at the
    target site in order to gain unauthorized access.
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了使用各种技术类型来增强评估的内容。这包括了在执行参与的物理部分时遇到的一些挑战。物理部分是指顾问到达目标现场以获取未经授权的访问权限的地方。
- en: The challenges associated with connecting to the physical networks were also
    looked at, including the use of port testers and netbooks, as well as covering
    some ideas for overcoming the challenges of Port Security and a lack of DHCP when
    on-site.
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还研究了与连接到物理网络相关的挑战，包括使用端口测试工具和网络书，以及涵盖了在现场时解决端口安全和缺乏DHCP的一些想法。
- en: Next came the concept of attaching to a network remotely. This typically involves
    leaving a device known as a “dropbox” on-site after connecting it to the target
    network.
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是远程连接到网络的概念。这通常涉及连接到目标网络后在现场留下一个称为“dropbox”的设备。
- en: We took an extensive look at building our own 3G-enabled dropbox using a RaspberryPi.
    This includes augmentations such as an LCD screen to display connectivity status.
    We then looked at adding OpenVPN support to the device, which in essence provided
    us with unrestricted access into the target network.
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 我们仔细研究了使用树莓派构建我们自己的3G可用dropbox。这包括增加诸如LCD屏幕显示连接状态等改进。然后，我们考虑了为设备添加OpenVPN支持，本质上为我们提供了对目标网络的不受限制的访问。
- en: Next we ran through some alternative dropbox ideas, some of which have seen
    high-profile coverage in the recent news media.
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们讨论了一些替代的dropbox想法，其中一些在最近的新闻媒体中受到了广泛关注。
- en: To round the chapter up, we covered some gadgets and tools that can also be
    used on an engagement, including keyloggers, Teensy, and audio recording.
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: 为了总结本章，我们还介绍了一些可以在参与中使用的小工具和工具，包括键盘记录器、Teensy和音频记录。
- en: I sincerely hope that you take the time to build a dropbox of your own. It will
    really set your assessments apart from the competition.
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: 我真诚地希望你花时间建立自己的dropbox。这将确实使你的评估与竞争对手区别开来。
- en: The next chapter will focus on the main deliverable of the assessment, the client’s
    report.
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将重点介绍评估的主要成果，即客户报告。
